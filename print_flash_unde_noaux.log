Namespace(abs_obj='NODE', all=True, cmp=False, confidence=1.0, iter=2, kmax=3, learn=False, node_num=2, outputfile=None, preprocess=False, protocol='flash_unde_noaux', recalculate='y', srcfile=None, support=0.0)
******************************
Preprocessing
typedef:
self.atoms:
collect atoms from NI_Replace3
self.atoms:
collect atoms from NI_Replace4
self.atoms:
collect atoms from NI_InvAck_311
self.atoms:
collect atoms from NI_InvAck_212
self.atoms:
collect atoms from NI_InvAck_113
self.atoms:
collect atoms from NI_InvAck_exists14
self.atoms:
collect atoms from NI_InvAck_exists_Home15
self.atoms:
collect atoms from NI_Inv16
self.atoms:
collect atoms from NI_Inv17
self.atoms:
collect atoms from NI_Remote_PutX18
self.atoms:
collect atoms from NI_Remote_Put20
self.atoms:
collect atoms from NI_Remote_Put21
self.atoms:
collect atoms from NI_Remote_GetX_PutX_Home24
self.atoms:
collect atoms from NI_Remote_GetX_PutX25
self.atoms:
collect atoms from NI_Remote_GetX_Nak_Home26
self.atoms:
collect atoms from NI_Remote_GetX_Nak27
self.atoms:
collect atoms from NI_Local_GetX_PutX_1128
self.atoms:
collect atoms from NI_Local_GetX_PutX_1029
self.atoms:
collect atoms from NI_Local_GetX_PutX_10_Home30
self.atoms:
collect atoms from NI_Local_GetX_PutX_931
self.atoms:
collect atoms from NI_Local_GetX_PutX_932
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_NODE_Get33
self.atoms:
collect atoms from NI_Local_GetX_PutX_834
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_Home_NODE_Get35
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_Home36
self.atoms:
collect atoms from NI_Local_GetX_PutX_7_NODE_Get37
self.atoms:
collect atoms from NI_Local_GetX_PutX_7_NODE_Get38
self.atoms:
collect atoms from NI_Local_GetX_PutX_739
self.atoms:
collect atoms from NI_Local_GetX_PutX_740
self.atoms:
collect atoms from NI_Local_GetX_PutX_641
self.atoms:
collect atoms from NI_Local_GetX_PutX_542
self.atoms:
collect atoms from NI_Local_GetX_PutX_443
self.atoms:
collect atoms from NI_Local_GetX_PutX_344
self.atoms:
collect atoms from NI_Local_GetX_PutX_245
self.atoms:
collect atoms from NI_Local_GetX_PutX_146
self.atoms:
collect atoms from NI_Local_GetX_GetX47
self.atoms:
collect atoms from NI_Local_GetX_GetX48
self.atoms:
collect atoms from NI_Local_GetX_Nak49
self.atoms:
collect atoms from NI_Local_GetX_Nak50
self.atoms:
collect atoms from NI_Local_GetX_Nak51
self.atoms:
collect atoms from NI_Remote_Get_Put_Home52
self.atoms:
collect atoms from NI_Remote_Get_Put53
self.atoms:
collect atoms from NI_Remote_Get_Nak_Home54
self.atoms:
collect atoms from NI_Remote_Get_Nak55
self.atoms:
collect atoms from NI_Local_Get_Put_Dirty56
self.atoms:
collect atoms from NI_Local_Get_Put57
self.atoms:
collect atoms from NI_Local_Get_Put_Head58
self.atoms:
collect atoms from NI_Local_Get_Get59
self.atoms:
collect atoms from NI_Local_Get_Get60
self.atoms:
collect atoms from NI_Local_Get_Nak61
self.atoms:
collect atoms from NI_Local_Get_Nak62
self.atoms:
collect atoms from NI_Local_Get_Nak63
self.atoms:
collect atoms from NI_Nak66
self.atoms:
collect atoms from PI_Remote_Replace68
self.atoms:
collect atoms from PI_Remote_PutX71
self.atoms:
collect atoms from PI_Remote_GetX80
self.atoms:
collect atoms from PI_Remote_Get84
self.atoms:
collect atoms from Store_Home85
self.atoms:
collect atoms from Store86
Find atomic predicates: 55

all_types:{'NODE': 'NODE_NUM', 'DATA': 'DATA_NUM'}
replace_index:None
files "./protocols/flash_unde_noaux/data/itemMeaning.pkl", "./protocols/flash_unde_noaux/data/dataset.pkl" or "./protocols/flash_unde_noaux/data/para_digit.pkl" do not exist
Reading reachable set
call is_rs_match_dataset
call read_csv

Index of atomic predicates: {'Sta.Proc[NODE_1].ProcCmd': 0, 'Sta.Proc[NODE_1].InvMarked': 1, 'Sta.Proc[NODE_1].CacheState': 2, 'Sta.Proc[NODE_1].CacheData': 3, 'Sta.Proc[NODE_2].ProcCmd': 4, 'Sta.Proc[NODE_2].InvMarked': 5, 'Sta.Proc[NODE_2].CacheState': 6, 'Sta.Proc[NODE_2].CacheData': 7, 'Sta.Dir.Pending': 8, 'Sta.Dir.Local': 9, 'Sta.Dir.Dirty': 10, 'Sta.Dir.HeadVld': 11, 'Sta.Dir.HeadPtr': 12, 'Sta.Dir.ShrVld': 13, 'Sta.Dir.InvSet[NODE_1]': 14, 'Sta.Dir.InvSet[NODE_2]': 15, 'Sta.Dir.ShrSet[NODE_1]': 16, 'Sta.Dir.ShrSet[NODE_2]': 17, 'Sta.Dir.HomeHeadPtr': 18, 'Sta.Dir.HomeShrSet': 19, 'Sta.Dir.HomeInvSet': 20, 'Sta.MemData': 21, 'Sta.UniMsg[NODE_1].Cmd': 22, 'Sta.UniMsg[NODE_1].Proc': 23, 'Sta.UniMsg[NODE_1].HomeProc': 24, 'Sta.UniMsg[NODE_1].Data': 25, 'Sta.UniMsg[NODE_2].Cmd': 26, 'Sta.UniMsg[NODE_2].Proc': 27, 'Sta.UniMsg[NODE_2].HomeProc': 28, 'Sta.UniMsg[NODE_2].Data': 29, 'Sta.InvMsg[NODE_1].Cmd': 30, 'Sta.InvMsg[NODE_2].Cmd': 31, 'Sta.RpMsg[NODE_1].Cmd': 32, 'Sta.RpMsg[NODE_2].Cmd': 33, 'Sta.WbMsg.Cmd': 34, 'Sta.WbMsg.Proc': 35, 'Sta.WbMsg.HomeProc': 36, 'Sta.WbMsg.Data': 37, 'Sta.ShWbMsg.Cmd': 38, 'Sta.ShWbMsg.Proc': 39, 'Sta.ShWbMsg.HomeProc': 40, 'Sta.ShWbMsg.Data': 41, 'Sta.NakcMsg.Cmd': 42, 'Sta.HomeProc.ProcCmd': 43, 'Sta.HomeProc.InvMarked': 44, 'Sta.HomeProc.CacheState': 45, 'Sta.HomeProc.CacheData': 46, 'Sta.HomeUniMsg.Cmd': 47, 'Sta.HomeUniMsg.Proc': 48, 'Sta.HomeUniMsg.HomeProc': 49, 'Sta.HomeUniMsg.Data': 50, 'Sta.HomeInvMsg.Cmd': 51, 'Sta.HomeRpMsg.Cmd': 52, 'Sta.CurrData': 53}
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
len(staetList):429261
Features / Atomic predicates:  67 
Mapping states into numbers using all variables...
Reachable set: 429260
size of dataset: 429260 * 67
Read existing global variables from "./protocols/flash_unde_noaux/global_vars.txt"
global_vars:{0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 38, 39, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 76, 77, 87, 92, 93, 102, 103, 106, 107, 110, 111, 112, 113, 121, 122, 123, 124}
***
Learning
--------------------------
Generating frequent set........
---build_super_set----
build_super_set done
len d: 429260, len ck:131 
time complexity will be: O(56233060)
time for scan L1: 0.000
len(CK):8515
CK:<filter object at 0x7fceca718fa0>
len d: 429260, len ck:8515 
time complexity will be: O(3655148900)
time for scan L2 : 45.906
-------------------

len(CK):311859
CK:<filter object at 0x7fceca718fa0>
len d: 429260, len ck:303354 
time complexity will be: O(130217738040)
time for scan L3 : 2826.666
-------------------

Running time for frequent sets: 2922.033 s
Running time for calculating association rules: 5.271 s 
length:138003


Association rules: 138003
len(rule_string_list):80921
len(rule_string_list):3541
len(rule_string_list):3333
[call murphi]compile murphi to cpp....
command1 = /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/src/mu ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.m
command2 = g++ -ggdb -o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.cpp -I /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/include -lm
command3 = ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.o -m1000 -finderrors -ndl
compile murphi file to cpp....
Code generated
compile .cpp to .o file....
running .o file....
counter_ex:['rule_8', 'rule_44', 'rule_110', 'rule_134', 'rule_137', 'rule_138', 'rule_153', 'rule_157', 'rule_169', 'rule_187', 'rule_226', 'rule_270', 'rule_283', 'rule_330', 'rule_395', 'rule_430', 'rule_448', 'rule_467', 'rule_482', 'rule_498', 'rule_510', 'rule_538', 'rule_548', 'rule_573', 'rule_601', 'rule_626', 'rule_648', 'rule_657', 'rule_668', 'rule_679', 'rule_712', 'rule_720', 'rule_729', 'rule_748', 'rule_772', 'rule_783', 'rule_798', 'rule_803', 'rule_822', 'rule_837', 'rule_842', 'rule_854', 'rule_863', 'rule_897', 'rule_899', 'rule_902', 'rule_904', 'rule_906', 'rule_908', 'rule_910', 'rule_911', 'rule_914', 'rule_915', 'rule_917', 'rule_920', 'rule_922', 'rule_923', 'rule_926', 'rule_928', 'rule_930', 'rule_1012', 'rule_1016', 'rule_1057', 'rule_1063', 'rule_1242', 'rule_1250', 'rule_1251', 'rule_1292', 'rule_1389', 'rule_1398', 'rule_1399', 'rule_1400', 'rule_1476', 'rule_1483', 'rule_1486', 'rule_1487', 'rule_1520', 'rule_1522', 'rule_1579', 'rule_1580', 'rule_1594', 'rule_1595', 'rule_1596', 'rule_3073', 'rule_3084', 'rule_3088', 'rule_3097', 'rule_33', 'rule_41', 'rule_460', 'rule_808', 'rule_898', 'rule_942', 'rule_1017', 'rule_1064', 'rule_1098', 'rule_1153', 'rule_1243', 'rule_1252', 'rule_1406', 'rule_1407', 'rule_1477', 'rule_1484', 'rule_1488', 'rule_1602', 'rule_1603', 'rule_2053', 'rule_2145', 'rule_2309', 'rule_2324', 'rule_2813', 'rule_2817', 'rule_2819', 'rule_2831', 'rule_2833', 'rule_2841', 'rule_2845', 'rule_2847', 'rule_2858', 'rule_2998', 'rule_3028', 'rule_3199', 'rule_3200', 'rule_41', 'rule_156', 'rule_756', 'rule_776', 'rule_901', 'rule_918', 'rule_942', 'rule_2053', 'rule_2145', 'rule_2309', 'rule_2324', 'rule_2813', 'rule_2817', 'rule_2819', 'rule_2826', 'rule_2831', 'rule_2832', 'rule_2833', 'rule_2841', 'rule_2845', 'rule_2847', 'rule_2852', 'rule_2858', 'rule_2860', 'rule_2998', 'rule_3028', 'rule_3199', 'rule_3200', 'rule_3273', 'rule_3279', 'rule_3288', 'rule_3293', 'rule_21', 'rule_452', 'rule_474', 'rule_478', 'rule_791', 'rule_795', 'rule_1001', 'rule_1244', 'rule_1248', 'rule_1293', 'rule_1478', 'rule_1482', 'rule_1523', 'rule_2001', 'rule_2090', 'rule_2301', 'rule_2318', 'rule_2994', 'rule_3023', 'rule_3123', 'rule_3125', 'rule_3135', 'rule_438', 'rule_452', 'rule_478', 'rule_795', 'rule_929', 'rule_1001', 'rule_2001', 'rule_2090', 'rule_2301', 'rule_2318', 'rule_2994', 'rule_3023', 'rule_3117', 'rule_3123', 'rule_3124', 'rule_3125', 'rule_3128', 'rule_3135', 'rule_3137', 'rule_3276', 'rule_3282', 'rule_3317', 'rule_3319', 'rule_199', 'rule_542', 'rule_556', 'rule_562', 'rule_831', 'rule_1007', 'rule_1018', 'rule_1065', 'rule_1216', 'rule_1221', 'rule_1245', 'rule_1249', 'rule_1285', 'rule_1289', 'rule_1307', 'rule_1310', 'rule_1312', 'rule_1317', 'rule_1325', 'rule_1331', 'rule_1413', 'rule_1418', 'rule_1461', 'rule_1479', 'rule_1485', 'rule_1518', 'rule_1535', 'rule_1538', 'rule_1540', 'rule_1544', 'rule_1609', 'rule_2649', 'rule_2672', 'rule_900', 'rule_913', 'rule_47', 'rule_50', 'rule_63', 'rule_69', 'rule_72', 'rule_81', 'rule_83', 'rule_86', 'rule_99', 'rule_102', 'rule_107', 'rule_117', 'rule_121', 'rule_123', 'rule_1294', 'rule_1524', 'rule_1904', 'rule_1971', 'rule_2336', 'rule_2344', 'rule_2351', 'rule_2365', 'rule_2369', 'rule_2375', 'rule_2381', 'rule_2384', 'rule_2386', 'rule_74', 'rule_79', 'rule_112', 'rule_119', 'rule_2345', 'rule_2350', 'rule_2376', 'rule_2383', 'rule_177', 'rule_288', 'rule_724', 'rule_912', 'rule_924', 'rule_1257', 'rule_1265', 'rule_1266', 'rule_1358', 'rule_1392', 'rule_1395', 'rule_1408', 'rule_1493', 'rule_1501', 'rule_1503', 'rule_1504', 'rule_1563', 'rule_1586', 'rule_1588', 'rule_1593', 'rule_1604', 'rule_3074', 'rule_3085', 'rule_3089', 'rule_3098', 'rule_553', 'rule_2651', 'rule_2674', 'rule_1004', 'rule_1060', 'rule_1070', 'rule_2655', 'rule_2679', 'rule_122', 'rule_1030', 'rule_1082', 'rule_2385', 'rule_1099', 'rule_1154', 'rule_1258', 'rule_1267', 'rule_1494', 'rule_1505', 'rule_20', 'rule_43', 'rule_109', 'rule_135', 'rule_136', 'rule_154', 'rule_168', 'rule_185', 'rule_197', 'rule_198', 'rule_225', 'rule_269', 'rule_282', 'rule_329', 'rule_394', 'rule_429', 'rule_447', 'rule_459', 'rule_481', 'rule_497', 'rule_509', 'rule_537', 'rule_546', 'rule_547', 'rule_560', 'rule_572', 'rule_600', 'rule_625', 'rule_647', 'rule_655', 'rule_666', 'rule_667', 'rule_676', 'rule_678', 'rule_688', 'rule_697', 'rule_709', 'rule_711', 'rule_719', 'rule_728', 'rule_747', 'rule_771', 'rule_782', 'rule_797', 'rule_802', 'rule_812', 'rule_813', 'rule_814', 'rule_820', 'rule_830', 'rule_847', 'rule_848', 'rule_853', 'rule_866', 'rule_867', 'rule_870', 'rule_872', 'rule_874', 'rule_876', 'rule_878', 'rule_879', 'rule_882', 'rule_883', 'rule_886', 'rule_888', 'rule_889', 'rule_892', 'rule_894', 'rule_896', 'rule_2824', 'rule_2851', 'rule_3072', 'rule_3087', 'rule_3116', 'rule_3127', 'rule_417', 'rule_427', 'rule_515', 'rule_553', 'rule_806', 'rule_859', 'rule_957', 'rule_1003', 'rule_1008', 'rule_1014', 'rule_1019', 'rule_1059', 'rule_1066', 'rule_1272', 'rule_1274', 'rule_1278', 'rule_1280', 'rule_1311', 'rule_1313', 'rule_1326', 'rule_1423', 'rule_1426', 'rule_1510', 'rule_1512', 'rule_1539', 'rule_1541', 'rule_1614', 'rule_2054', 'rule_2146', 'rule_2991', 'rule_2999', 'rule_3018', 'rule_3029', 'rule_3082', 'rule_3095', 'rule_3100', 'rule_3274', 'rule_3280', 'rule_3289', 'rule_3295', 'rule_155', 'rule_868', 'rule_881', 'rule_2826', 'rule_2832', 'rule_2852', 'rule_2860', 'rule_3074', 'rule_3085', 'rule_3089', 'rule_3098', 'rule_3117', 'rule_3124', 'rule_3128', 'rule_3137', 'rule_1259', 'rule_1263', 'rule_1495', 'rule_1499', 'rule_127', 'rule_146', 'rule_232', 'rule_253', 'rule_338', 'rule_351', 'rule_359', 'rule_361', 'rule_381', 'rule_384', 'rule_390', 'rule_393', 'rule_402', 'rule_406', 'rule_1030', 'rule_1082', 'rule_1516', 'rule_1898', 'rule_2214', 'rule_2224', 'rule_3278', 'rule_3284', 'rule_3326', 'rule_3328', 'rule_363', 'rule_368', 'rule_397', 'rule_404', 'rule_2225', 'rule_2230', 'rule_1013', 'rule_1058', 'rule_755', 'rule_775', 'rule_827', 'rule_869', 'rule_884', 'rule_3211', 'rule_3229', 'rule_485', 'rule_488', 'rule_495', 'rule_641', 'rule_652', 'rule_654', 'rule_663', 'rule_665', 'rule_691', 'rule_740', 'rule_2508', 'rule_2530', 'rule_2814', 'rule_2844', 'rule_3048', 'rule_3049', 'rule_3055', 'rule_3056', 'rule_3058', 'rule_3061', 'rule_3069', 'rule_437', 'rule_895', 'rule_2256', 'rule_2288', 'rule_3216', 'rule_3233', 'rule_62', 'rule_98', 'rule_1029', 'rule_1033', 'rule_1081', 'rule_1682', 'rule_1706', 'rule_1708', 'rule_2335', 'rule_2364', 'rule_2646', 'rule_2668', 'rule_2670', 'rule_1218', 'rule_1223', 'rule_1253', 'rule_1309', 'rule_1314', 'rule_1315', 'rule_1324', 'rule_1327', 'rule_1328', 'rule_1329', 'rule_1401', 'rule_1439', 'rule_1444', 'rule_1464', 'rule_1489', 'rule_1537', 'rule_1542', 'rule_1543', 'rule_1581', 'rule_1597', 'rule_1622', 'rule_1627', 'rule_3000', 'rule_3201', 'rule_3202', 'rule_407', 'rule_1260', 'rule_1264', 'rule_1308', 'rule_1496', 'rule_1500', 'rule_1502', 'rule_1536', 'rule_2648', 'rule_2671', 'rule_2680', 'rule_167', 'rule_175', 'rule_176', 'rule_287', 'rule_723', 'rule_805', 'rule_807', 'rule_880', 'rule_890', 'rule_2141', 'rule_2823', 'rule_2850', 'rule_3071', 'rule_3086', 'rule_3115', 'rule_3126', 'rule_3158', 'rule_3217', 'rule_186', 'rule_416', 'rule_466', 'rule_836', 'rule_858', 'rule_865', 'rule_2416', 'rule_2434', 'rule_2436', 'rule_2470', 'rule_2483', 'rule_2485', 'rule_2828', 'rule_2854', 'rule_3076', 'rule_3091', 'rule_3119', 'rule_3130', 'rule_25', 'rule_46', 'rule_120', 'rule_143', 'rule_170', 'rule_201', 'rule_230', 'rule_276', 'rule_286', 'rule_289', 'rule_336', 'rule_405', 'rule_432', 'rule_451', 'rule_461', 'rule_483', 'rule_502', 'rule_513', 'rule_539', 'rule_552', 'rule_577', 'rule_578', 'rule_595', 'rule_597', 'rule_633', 'rule_651', 'rule_672', 'rule_683', 'rule_716', 'rule_722', 'rule_734', 'rule_751', 'rule_774', 'rule_786', 'rule_800', 'rule_804', 'rule_818', 'rule_833', 'rule_852', 'rule_856', 'rule_932', 'rule_934', 'rule_940', 'rule_947', 'rule_955', 'rule_966', 'rule_967', 'rule_974', 'rule_978', 'rule_981', 'rule_982', 'rule_985', 'rule_987', 'rule_988', 'rule_991', 'rule_993', 'rule_995', 'rule_2124', 'rule_2155', 'rule_2451', 'rule_2496', 'rule_2526', 'rule_2541', 'rule_2838', 'rule_2859', 'rule_2989', 'rule_2995', 'rule_3008', 'rule_3083', 'rule_3136', 'rule_3307', 'rule_540', 'rule_811', 'rule_921', 'rule_2080', 'rule_2084', 'rule_2158', 'rule_2159', 'rule_2161', 'rule_2163', 'rule_2503', 'rule_2514', 'rule_2543', 'rule_2582', 'rule_2586', 'rule_2597', 'rule_2627', 'rule_2631', 'rule_2647', 'rule_2648', 'rule_2656', 'rule_2671', 'rule_2680', 'rule_427', 'rule_515', 'rule_806', 'rule_957', 'rule_2054', 'rule_2146', 'rule_2991', 'rule_2999', 'rule_3018', 'rule_3029', 'rule_3082', 'rule_3095', 'rule_3100', 'rule_162', 'rule_936', 'rule_980', 'rule_1220', 'rule_1225', 'rule_1256', 'rule_1319', 'rule_1333', 'rule_1405', 'rule_1455', 'rule_1465', 'rule_1492', 'rule_1546', 'rule_1601', 'rule_1634', 'rule_103', 'rule_118', 'rule_1023', 'rule_1078', 'rule_1211', 'rule_1458', 'rule_2302', 'rule_2370', 'rule_2382', 'rule_3024', 'rule_49', 'rule_85', 'rule_212', 'rule_1232', 'rule_1236', 'rule_1466', 'rule_1470', 'rule_1728', 'rule_1820', 'rule_385', 'rule_403', 'rule_1023', 'rule_1078', 'rule_1210', 'rule_1457', 'rule_1997', 'rule_130', 'rule_149', 'rule_605', 'rule_611', 'rule_620', 'rule_631', 'rule_632', 'rule_634', 'rule_635', 'rule_2652', 'rule_2675', 'rule_769', 'rule_1000', 'rule_3275', 'rule_3281', 'rule_3316', 'rule_3318', 'rule_3212', 'rule_3230', 'rule_893', 'rule_927', 'rule_3215', 'rule_3232', 'rule_759', 'rule_779', 'rule_938', 'rule_983', 'rule_640', 'rule_684', 'rule_717', 'rule_827', 'rule_525', 'rule_684', 'rule_707', 'rule_735', 'rule_805', 'rule_905', 'rule_1049', 'rule_1091', 'rule_2416', 'rule_2434', 'rule_2436', 'rule_2445', 'rule_2470', 'rule_2483', 'rule_2485', 'rule_2491', 'rule_769', 'rule_1000', 'rule_2658', 'rule_2682', 'rule_2257', 'rule_2289', 'rule_3220', 'rule_3237', 'rule_441', 'rule_994', 'rule_57', 'rule_76', 'rule_93', 'rule_114', 'rule_2331', 'rule_2347', 'rule_2360', 'rule_2378', 'rule_350', 'rule_380', 'rule_2213', 'rule_2654', 'rule_2678', 'rule_1668', 'rule_1690', 'rule_1806', 'rule_1853', 'rule_1871', 'rule_1318', 'rule_1332', 'rule_1545', 'rule_1150', 'rule_1191', 'rule_1409', 'rule_1429', 'rule_1432', 'rule_1605', 'rule_1617', 'rule_635', 'rule_1998', 'rule_2055', 'rule_2078', 'rule_2082', 'rule_2086', 'rule_2091', 'rule_2147', 'rule_2148', 'rule_2149', 'rule_2151', 'rule_2152', 'rule_2153', 'rule_178', 'rule_726', 'rule_810', 'rule_979', 'rule_989', 'rule_2773', 'rule_189', 'rule_887', 'rule_2150', 'rule_2154', 'rule_468', 'rule_603', 'rule_839', 'rule_931', 'rule_2711', 'rule_2759', 'rule_2830', 'rule_2856', 'rule_3078', 'rule_3093', 'rule_3121', 'rule_3132', 'rule_1341', 'rule_1350', 'rule_1552', 'rule_1114', 'rule_1117', 'rule_1168', 'rule_1171', 'rule_2088', 'rule_2093', 'rule_2165', 'rule_2167', 'rule_2571', 'rule_2577', 'rule_2584', 'rule_2619', 'rule_2622', 'rule_2629', 'rule_2652', 'rule_2675', 'rule_3006', 'rule_3036', 'rule_3296', 'rule_2097', 'rule_2099', 'rule_2102', 'rule_2123', 'rule_2126', 'rule_2137', 'rule_2140', 'rule_2243', 'rule_2269', 'rule_2282', 'rule_2297', 'rule_2593', 'rule_2640', 'rule_2658', 'rule_2682', 'rule_3014', 'rule_3045', 'rule_3333', 'rule_1793', 'rule_1864', 'rule_540', 'rule_811', 'rule_2080', 'rule_2084', 'rule_2161', 'rule_2163', 'rule_2503', 'rule_2514', 'rule_2526', 'rule_2541', 'rule_2586', 'rule_2631', 'rule_3008', 'rule_3307', 'rule_3274', 'rule_3280', 'rule_3289', 'rule_3295', 'rule_3278', 'rule_3284', 'rule_3326', 'rule_3328', 'rule_1412', 'rule_1431', 'rule_1434', 'rule_1608', 'rule_1619', 'rule_3150', 'rule_3157', 'rule_204', 'rule_218', 'rule_1229', 'rule_1237', 'rule_1239', 'rule_1471', 'rule_1473', 'rule_1668', 'rule_1690', 'rule_1775', 'rule_1799', 'rule_1806', 'rule_1819', 'rule_1849', 'rule_1853', 'rule_1870', 'rule_1871', 'rule_632', 'rule_1590', 'rule_1625', 'rule_2656', 'rule_1583', 'rule_1624', 'rule_2064', 'rule_2076', 'rule_2540', 'rule_3099', 'rule_3175', 'rule_1793', 'rule_1864', 'rule_2064', 'rule_2540', 'rule_3099', 'rule_3175', 'rule_733', 'rule_2399', 'rule_2419', 'rule_2444', 'rule_2451', 'rule_2463', 'rule_2473', 'rule_2490', 'rule_2496', 'rule_3277', 'rule_3283', 'rule_3325', 'rule_3327', 'rule_3219', 'rule_3236', 'rule_992', 'rule_2825', 'rule_524', 'rule_873', 'rule_644', 'rule_2103', 'rule_2104', 'rule_2105', 'rule_2106', 'rule_2127', 'rule_2128', 'rule_2560', 'rule_2562', 'rule_2580', 'rule_2606', 'rule_2608', 'rule_2625', 'rule_2807', 'rule_2810', 'rule_2823', 'rule_2834', 'rule_2836', 'rule_2850', 'rule_2867', 'rule_2868', 'rule_2871', 'rule_2884', 'rule_2887', 'rule_2888', 'rule_2891', 'rule_2905', 'rule_2912', 'rule_2914', 'rule_2923', 'rule_2946', 'rule_2955', 'rule_2961', 'rule_2967', 'rule_2983', 'rule_3002', 'rule_3030', 'rule_3071', 'rule_3086', 'rule_3115', 'rule_3126', 'rule_3217', 'rule_3235', 'rule_534', 'rule_1048', 'rule_1090', 'rule_2085', 'rule_2086', 'rule_2089', 'rule_2091', 'rule_2105', 'rule_2106', 'rule_2109', 'rule_2110', 'rule_2112', 'rule_2113', 'rule_2114', 'rule_2117', 'rule_2119', 'rule_2120', 'rule_2121', 'rule_2124', 'rule_2141', 'rule_2147', 'rule_2149', 'rule_2150', 'rule_2151', 'rule_2153', 'rule_2154', 'rule_2155', 'rule_2158', 'rule_2159', 'rule_2543', 'rule_2560', 'rule_2582', 'rule_2597', 'rule_2606', 'rule_2627', 'rule_2647', 'rule_2807', 'rule_2834', 'rule_2867', 'rule_2868', 'rule_2871', 'rule_2884', 'rule_2887', 'rule_2888', 'rule_2891', 'rule_2905', 'rule_1212', 'rule_1214', 'rule_1268', 'rule_1440', 'rule_1459', 'rule_1506', 'rule_1623', 'rule_2177', 'rule_2180', 'rule_2181', 'rule_345', 'rule_365', 'rule_375', 'rule_399', 'rule_2209', 'rule_2227', 'rule_1022', 'rule_1026', 'rule_1077', 'rule_1644', 'rule_1660', 'rule_1662', 'rule_2669', 'rule_604', 'rule_619', 'rule_1787', 'rule_1856', 'rule_1856', 'rule_1861', 'rule_142', 'rule_161', 'rule_643', 'rule_650', 'rule_660', 'rule_671', 'rule_809', 'rule_909', 'rule_933', 'rule_935', 'rule_969', 'rule_973', 'rule_975', 'rule_976', 'rule_1305', 'rule_1322', 'rule_1357', 'rule_1361', 'rule_1363', 'rule_1443', 'rule_1534', 'rule_1559', 'rule_1561', 'rule_1626', 'rule_2511', 'rule_2539', 'rule_3079', 'rule_3094', 'rule_3122', 'rule_3133', 'rule_3306', 'rule_3308', 'rule_3083', 'rule_3136', 'rule_3296', 'rule_1166', 'rule_2005', 'rule_2066', 'rule_3081', 'rule_3134', 'rule_3294', 'rule_1005', 'rule_1015', 'rule_1061', 'rule_32', 'rule_1115', 'rule_1169', 'rule_2450', 'rule_2495', 'rule_3286', 'rule_3291', 'rule_473', 'rule_790', 'rule_2095', 'rule_2100', 'rule_2135', 'rule_2138', 'rule_2236', 'rule_2260', 'rule_2266', 'rule_2292', 'rule_2455', 'rule_2500', 'rule_3300', 'rule_3304', 'rule_986', 'rule_35', 'rule_475', 'rule_793', 'rule_1197', 'rule_1206', 'rule_1207', 'rule_1403', 'rule_1599', 'rule_1933', 'rule_1990', 'rule_2144', 'rule_2591', 'rule_2637', 'rule_2638', 'rule_2861', 'rule_2864', 'rule_2997', 'rule_3012', 'rule_3169', 'rule_3170', 'rule_3189', 'rule_3193', 'rule_3195', 'rule_3196', 'rule_3331', 'rule_1166', 'rule_2005', 'rule_2066', 'rule_3081', 'rule_3134', 'rule_3294', 'rule_1114', 'rule_1117', 'rule_1168', 'rule_1171', 'rule_2088', 'rule_2093', 'rule_2165', 'rule_2167', 'rule_2571', 'rule_2577', 'rule_2584', 'rule_2619', 'rule_2622', 'rule_2629', 'rule_2989', 'rule_2995', 'rule_3006', 'rule_3036', 'rule_2097', 'rule_2099', 'rule_2102', 'rule_2123', 'rule_2126', 'rule_2137', 'rule_2140', 'rule_2243', 'rule_2269', 'rule_2282', 'rule_2297', 'rule_2593', 'rule_2640', 'rule_3014', 'rule_3045', 'rule_3333', 'rule_3176', 'rule_3177', 'rule_3191', 'rule_3192', 'rule_1213', 'rule_1215', 'rule_1271', 'rule_1456', 'rule_1460', 'rule_1509', 'rule_1635', 'rule_103', 'rule_118', 'rule_122', 'rule_125', 'rule_144', 'rule_246', 'rule_251', 'rule_263', 'rule_265', 'rule_274', 'rule_275', 'rule_277', 'rule_278', 'rule_279', 'rule_662', 'rule_673', 'rule_925', 'rule_1193', 'rule_1201', 'rule_1270', 'rule_1394', 'rule_1411', 'rule_1442', 'rule_1446', 'rule_1508', 'rule_1585', 'rule_1587', 'rule_1591', 'rule_1607', 'rule_1629', 'rule_1885', 'rule_1888', 'rule_1891', 'rule_1893', 'rule_1894', 'rule_1895', 'rule_1896', 'rule_1953', 'rule_1956', 'rule_1960', 'rule_1961', 'rule_1962', 'rule_1963', 'rule_1965', 'rule_1997', 'rule_2011', 'rule_2032', 'rule_2033', 'rule_2034', 'rule_2177', 'rule_2245', 'rule_2275', 'rule_2283', 'rule_2302', 'rule_2370', 'rule_2382', 'rule_2385', 'rule_2527', 'rule_3017', 'rule_3024', 'rule_3026', 'rule_3041', 'rule_3046', 'rule_2015', 'rule_2050', 'rule_2296', 'rule_3324', 'rule_2015', 'rule_2050', 'rule_2296', 'rule_3324', 'rule_1233', 'rule_1467', 'rule_1639', 'rule_1653', 'rule_1811', 'rule_1872', 'rule_1639', 'rule_1653', 'rule_1786', 'rule_1805', 'rule_1811', 'rule_1860', 'rule_1872', 'rule_1805', 'rule_1869', 'rule_765', 'rule_1262', 'rule_1498', 'rule_2122', 'rule_2125', 'rule_2657', 'rule_2681', 'rule_2863', 'rule_2866', 'rule_3013', 'rule_3044', 'rule_3329', 'rule_3330', 'rule_3332', 'rule_3277', 'rule_3283', 'rule_3325', 'rule_3327', 'rule_2875', 'rule_2875', 'rule_286', 'rule_577', 'rule_586', 'rule_2838', 'rule_2859', 'rule_2510', 'rule_2532', 'rule_2534', 'rule_3213', 'rule_3214', 'rule_3231', 'rule_533', 'rule_2103', 'rule_2104', 'rule_2168', 'rule_2169', 'rule_2580', 'rule_2625', 'rule_3002', 'rule_3030', 'rule_3235', 'rule_528', 'rule_950', 'rule_2879', 'rule_2900', 'rule_2941', 'rule_2978', 'rule_3212', 'rule_3230', 'rule_2247', 'rule_2250', 'rule_2257', 'rule_2277', 'rule_2280', 'rule_2289', 'rule_2886', 'rule_2908', 'rule_2949', 'rule_2985', 'rule_3220', 'rule_3237', 'rule_1113', 'rule_1115', 'rule_1167', 'rule_1169', 'rule_2450', 'rule_2495', 'rule_2879', 'rule_2900', 'rule_2094', 'rule_2095', 'rule_2098', 'rule_2100', 'rule_2108', 'rule_2116', 'rule_2135', 'rule_2138', 'rule_2236', 'rule_2247', 'rule_2266', 'rule_2277', 'rule_2455', 'rule_2500', 'rule_2886', 'rule_2908', 'rule_3194', 'rule_2657', 'rule_2681', 'rule_1776', 'rule_1794', 'rule_1850', 'rule_1865', 'rule_1800', 'rule_1873', 'rule_59', 'rule_95', 'rule_1028', 'rule_1032', 'rule_1080', 'rule_1681', 'rule_1705', 'rule_1707', 'rule_2333', 'rule_2362', 'rule_2504', 'rule_2516', 'rule_2518', 'rule_2653', 'rule_2676', 'rule_2677', 'rule_505', 'rule_520', 'rule_613', 'rule_628', 'rule_2842', 'rule_2058', 'rule_2839', 'rule_2857', 'rule_972', 'rule_1578', 'rule_2839', 'rule_1013', 'rule_1017', 'rule_1058', 'rule_1064', 'rule_1150', 'rule_1191', 'rule_1257', 'rule_1266', 'rule_1268', 'rule_1293', 'rule_1358', 'rule_1406', 'rule_1408', 'rule_1409', 'rule_1440', 'rule_1444', 'rule_1493', 'rule_1501', 'rule_1504', 'rule_1506', 'rule_1523', 'rule_1563', 'rule_1581', 'rule_1583', 'rule_1602', 'rule_1604', 'rule_1605', 'rule_1623', 'rule_1624', 'rule_1627', 'rule_2076', 'rule_3000', 'rule_3201', 'rule_3202', 'rule_972', 'rule_2087', 'rule_2092', 'rule_2143', 'rule_2156', 'rule_2157', 'rule_2164', 'rule_2166', 'rule_2172', 'rule_2173', 'rule_2174', 'rule_2175', 'rule_2176', 'rule_809', 'rule_976', 'rule_128', 'rule_131', 'rule_133', 'rule_147', 'rule_150', 'rule_152', 'rule_1362', 'rule_1560', 'rule_2003', 'rule_2031', 'rule_2479', 'rule_2507', 'rule_2840', 'rule_2913', 'rule_2959', 'rule_2960', 'rule_3016', 'rule_3022', 'rule_3031', 'rule_3032', 'rule_3033', 'rule_3034', 'rule_3035', 'rule_3039', 'rule_2131', 'rule_2134', 'rule_2592', 'rule_2639', 'rule_1097', 'rule_1100', 'rule_1124', 'rule_1128', 'rule_1155', 'rule_1177', 'rule_1340', 'rule_1344', 'rule_1349', 'rule_1353', 'rule_1551', 'rule_1555', 'rule_2690', 'rule_2718', 'rule_2777', 'rule_2778', 'rule_2779', 'rule_2780', 'rule_2781', 'rule_2798', 'rule_2799', 'rule_2800', 'rule_764', 'rule_2129', 'rule_2132', 'rule_2454', 'rule_2499', 'rule_2992', 'rule_2993', 'rule_3101', 'rule_3104', 'rule_3110', 'rule_3299', 'rule_3303', 'rule_767', 'rule_132', 'rule_151', 'rule_653', 'rule_664', 'rule_701', 'rule_733', 'rule_1048', 'rule_1090', 'rule_2114', 'rule_2121', 'rule_2399', 'rule_2419', 'rule_2444', 'rule_2463', 'rule_2473', 'rule_2490', 'rule_2808', 'rule_2811', 'rule_2835', 'rule_2837', 'rule_2869', 'rule_2872', 'rule_2883', 'rule_2889', 'rule_2892', 'rule_2906', 'rule_2915', 'rule_2924', 'rule_2962', 'rule_2968', 'rule_2059', 'rule_2060', 'rule_3249', 'rule_3250', 'rule_3251', 'rule_2058', 'rule_2857', 'rule_2122', 'rule_2125', 'rule_2131', 'rule_2134', 'rule_2592', 'rule_2639', 'rule_3013', 'rule_3044', 'rule_3332', 'rule_3102', 'rule_3106', 'rule_3112', 'rule_1801', 'rule_1874', 'rule_275', 'rule_1105', 'rule_1158', 'rule_1884', 'rule_1952', 'rule_1890', 'rule_1958', 'rule_231', 'rule_235', 'rule_252', 'rule_256', 'rule_265', 'rule_278', 'rule_297', 'rule_305', 'rule_322', 'rule_338', 'rule_385', 'rule_390', 'rule_403', 'rule_407', 'rule_2187', 'rule_2507', 'rule_2519', 'rule_919', 'rule_1260', 'rule_1261', 'rule_1265', 'rule_1270', 'rule_1308', 'rule_1311', 'rule_1376', 'rule_1379', 'rule_1392', 'rule_1394', 'rule_1407', 'rule_1411', 'rule_1496', 'rule_1497', 'rule_1503', 'rule_1508', 'rule_1536', 'rule_1539', 'rule_1565', 'rule_1568', 'rule_1585', 'rule_1586', 'rule_1587', 'rule_1590', 'rule_1591', 'rule_1603', 'rule_1607', 'rule_2011', 'rule_2032', 'rule_2033', 'rule_2034', 'rule_2283', 'rule_2527', 'rule_3017', 'rule_3026', 'rule_3041', 'rule_3046', 'rule_1205', 'rule_3015', 'rule_3322', 'rule_1271', 'rule_1395', 'rule_1412', 'rule_1456', 'rule_1509', 'rule_1593', 'rule_1608', 'rule_1635', 'rule_3150', 'rule_3157', 'rule_1869', 'rule_2666', 'rule_585', 'rule_535', 'rule_2170', 'rule_2171', 'rule_2822', 'rule_2849', 'rule_717', 'rule_2878', 'rule_2899', 'rule_2940', 'rule_2977', 'rule_1021', 'rule_1025', 'rule_1076', 'rule_1643', 'rule_1659', 'rule_1661', 'rule_2643', 'rule_2660', 'rule_2664', 'rule_347', 'rule_377', 'rule_2211', 'rule_3039', 'rule_2246', 'rule_2249', 'rule_2276', 'rule_2279', 'rule_2882', 'rule_2904', 'rule_2945', 'rule_2981', 'rule_2043', 'rule_3323', 'rule_1776', 'rule_1794', 'rule_1850', 'rule_1865', 'rule_1233', 'rule_1237', 'rule_1467', 'rule_1471', 'rule_1799', 'rule_1800', 'rule_1870', 'rule_1873', 'rule_1588', 'rule_1099', 'rule_1154', 'rule_1258', 'rule_1267', 'rule_1494', 'rule_1505', 'rule_1259', 'rule_1263', 'rule_1495', 'rule_1499', 'rule_1116', 'rule_1170', 'rule_2096', 'rule_2101', 'rule_2136', 'rule_2139', 'rule_2947', 'rule_2982', 'rule_3218', 'rule_3234', 'rule_2087', 'rule_2092', 'rule_2143', 'rule_2156', 'rule_2157', 'rule_2164', 'rule_2166', 'rule_2172', 'rule_2173', 'rule_2174', 'rule_2175', 'rule_2176', 'rule_1362', 'rule_1484', 'rule_1560', 'rule_2003', 'rule_2031', 'rule_2840', 'rule_2842', 'rule_3022', 'rule_3034', 'rule_3035', 'rule_2479', 'rule_3033', 'rule_3038', 'rule_2478', 'rule_3004', 'rule_3007', 'rule_3027', 'rule_3190', 'rule_3020', 'rule_3021', 'rule_3105', 'rule_3111', 'rule_707', 'rule_735', 'rule_1049', 'rule_1091', 'rule_2445', 'rule_2491', 'rule_1717', 'rule_1731', 'rule_1780', 'rule_1812', 'rule_1822', 'rule_1854', 'rule_2043', 'rule_3323', 'rule_1107', 'rule_1160', 'rule_1902', 'rule_1969', 'rule_1927', 'rule_1985', 'rule_1889', 'rule_1957', 'rule_1193', 'rule_1201', 'rule_1885', 'rule_1887', 'rule_1887', 'rule_1891', 'rule_1893', 'rule_1896', 'rule_1953', 'rule_1955', 'rule_1955', 'rule_1960', 'rule_1963', 'rule_1965', 'rule_2187', 'rule_2186', 'rule_1801', 'rule_1874', 'rule_2748', 'rule_589', 'rule_2427', 'rule_2441', 'rule_2476', 'rule_2488', 'rule_2509', 'rule_2531', 'rule_3180', 'rule_3181', 'rule_1665', 'rule_1666', 'rule_1684', 'rule_1685', 'rule_1687', 'rule_1688', 'rule_1710', 'rule_1711', 'rule_1732', 'rule_1733', 'rule_1735', 'rule_1736', 'rule_1740', 'rule_1746', 'rule_1765', 'rule_1771', 'rule_1802', 'rule_1803', 'rule_1823', 'rule_1824', 'rule_1828', 'rule_1834', 'rule_1840', 'rule_1846', 'rule_568', 'rule_581', 'rule_1262', 'rule_1498', 'rule_3329', 'rule_3330', 'rule_2130', 'rule_2133', 'rule_1116', 'rule_1170', 'rule_2096', 'rule_2101', 'rule_2136', 'rule_2139', 'rule_3040', 'rule_2478', 'rule_2957', 'rule_2988', 'rule_3004', 'rule_2700', 'rule_3009', 'rule_2810', 'rule_2836', 'rule_2914', 'rule_2923', 'rule_2946', 'rule_2961', 'rule_2967', 'rule_1339', 'rule_1348', 'rule_1550', 'rule_2767', 'rule_2770', 'rule_2793', 'rule_2085', 'rule_2089', 'rule_2109', 'rule_2110', 'rule_2112', 'rule_2113', 'rule_2117', 'rule_2119', 'rule_2120', 'rule_1713', 'rule_1788', 'rule_1790', 'rule_1807', 'rule_1862', 'rule_1744', 'rule_1752', 'rule_1762', 'rule_1769', 'rule_1832', 'rule_1844', 'rule_1924', 'rule_1983', 'rule_1254', 'rule_1269', 'rule_1287', 'rule_1291', 'rule_1371', 'rule_1385', 'rule_1393', 'rule_1393', 'rule_1396', 'rule_1397', 'rule_1402', 'rule_1410', 'rule_1437', 'rule_1438', 'rule_1447', 'rule_1448', 'rule_1449', 'rule_1452', 'rule_1490', 'rule_1507', 'rule_1521', 'rule_1577', 'rule_1589', 'rule_1589', 'rule_1592', 'rule_1598', 'rule_1606', 'rule_1621', 'rule_1630', 'rule_1631', 'rule_1451', 'rule_1454', 'rule_1633', 'rule_1105', 'rule_1158', 'rule_1884', 'rule_1952', 'rule_1890', 'rule_1958', 'rule_1672', 'rule_1672', 'rule_1692', 'rule_1692', 'rule_1886', 'rule_1886', 'rule_1888', 'rule_1894', 'rule_1895', 'rule_1954', 'rule_1954', 'rule_1956', 'rule_1961', 'rule_1962', 'rule_2941', 'rule_2978', 'rule_2542', 'rule_2544', 'rule_2596', 'rule_2642', 'rule_2644', 'rule_2659', 'rule_2661', 'rule_2663', 'rule_2665', 'rule_2690', 'rule_2718', 'rule_2777', 'rule_2798', 'rule_2072', 'rule_2073', 'rule_2205', 'rule_2206', 'rule_2234', 'rule_3254', 'rule_3259', 'rule_3260', 'rule_2250', 'rule_2280', 'rule_2949', 'rule_2985', 'rule_1636', 'rule_1637', 'rule_1647', 'rule_1648', 'rule_1650', 'rule_1651', 'rule_1714', 'rule_1715', 'rule_1747', 'rule_1772', 'rule_1808', 'rule_1809', 'rule_1835', 'rule_1847', 'rule_2701', 'rule_1741', 'rule_1743', 'rule_1751', 'rule_1758', 'rule_1761', 'rule_1766', 'rule_1768', 'rule_1784', 'rule_1829', 'rule_1831', 'rule_1838', 'rule_1841', 'rule_1843', 'rule_1858', 'rule_1897', 'rule_1964', 'rule_2180', 'rule_2181', 'rule_2885', 'rule_2907', 'rule_2948', 'rule_2984', 'rule_3219', 'rule_3236', 'rule_2130', 'rule_2133', 'rule_1304', 'rule_1321', 'rule_1533', 'rule_1113', 'rule_1167', 'rule_2094', 'rule_2098', 'rule_2108', 'rule_2116', 'rule_2199', 'rule_2200', 'rule_2223', 'rule_2700', 'rule_1269', 'rule_1507', 'rule_1107', 'rule_1160', 'rule_1902', 'rule_1969', 'rule_1450', 'rule_1453', 'rule_1632', 'rule_1927', 'rule_1985', 'rule_1889', 'rule_1957', 'rule_2427', 'rule_2441', 'rule_2476', 'rule_2488', 'rule_2548', 'rule_2555', 'rule_2600', 'rule_2686', 'rule_2705', 'rule_2714', 'rule_2721', 'rule_2747', 'rule_2751', 'rule_2704', 'rule_2746', 'rule_2127', 'rule_2128', 'rule_2562', 'rule_2608', 'rule_2912', 'rule_2955', 'rule_2983', 'rule_2016', 'rule_2017', 'rule_2018', 'rule_2019', 'rule_2035', 'rule_2036', 'rule_2189', 'rule_2190', 'rule_2191', 'rule_2192', 'rule_2195', 'rule_2196', 'rule_2207', 'rule_2216', 'rule_2220', 'rule_2447', 'rule_2448', 'rule_2493', 'rule_2877', 'rule_2897', 'rule_2898', 'rule_3053', 'rule_3065', 'rule_3066', 'rule_1302', 'rule_1529', 'rule_2178', 'rule_2179', 'rule_1717', 'rule_1731', 'rule_1812', 'rule_1822', 'rule_2870', 'rule_2890', 'rule_2701', 'rule_2960', 'rule_3016', 'rule_2876', 'rule_2896', 'rule_2567', 'rule_2610', 'rule_2612', 'rule_737', 'rule_746', 'rule_1042', 'rule_1050', 'rule_1092', 'rule_2107', 'rule_2115', 'rule_2129', 'rule_2132', 'rule_2254', 'rule_2255', 'rule_2286', 'rule_2400', 'rule_2406', 'rule_2420', 'rule_2423', 'rule_2443', 'rule_2446', 'rule_2454', 'rule_2464', 'rule_2474', 'rule_2492', 'rule_2499', 'rule_2876', 'rule_2885', 'rule_2896', 'rule_2907', 'rule_2911', 'rule_2958', 'rule_3020', 'rule_3021', 'rule_2238', 'rule_2241', 'rule_2271', 'rule_2569', 'rule_2611', 'rule_2616', 'rule_594', 'rule_2056', 'rule_2057', 'rule_2197', 'rule_2198', 'rule_2221', 'rule_3205', 'rule_3206', 'rule_3226', 'rule_1924', 'rule_1983', 'rule_1207', 'rule_3331', 'rule_1205', 'rule_3322', 'rule_569', 'rule_582', 'rule_2394', 'rule_2401', 'rule_2407', 'rule_2410', 'rule_2411', 'rule_2414', 'rule_2459', 'rule_2465', 'rule_2468', 'rule_2645', 'rule_2662', 'rule_2667', 'rule_2702', 'rule_2742', 'rule_2743', 'rule_1303', 'rule_1320', 'rule_1532', 'rule_1714', 'rule_1715', 'rule_1741', 'rule_1747', 'rule_1758', 'rule_1766', 'rule_1772', 'rule_1784', 'rule_1808', 'rule_1809', 'rule_1829', 'rule_1835', 'rule_1838', 'rule_1841', 'rule_1847', 'rule_1858', 'rule_2870', 'rule_2881', 'rule_2890', 'rule_2903', 'rule_2944', 'rule_2980', 'rule_1264', 'rule_1500', 'rule_1502', 'rule_2920', 'rule_2964', 'rule_3105', 'rule_3111', 'rule_2957', 'rule_2988', 'rule_1625', 'rule_1578', 'rule_2730', 'rule_2735', 'rule_2809', 'rule_2812', 'rule_1038', 'rule_1044', 'rule_1086', 'rule_2707', 'rule_2750', 'rule_2753', 'rule_2692', 'rule_2724', 'rule_2692', 'rule_2724', 'rule_1667', 'rule_1686', 'rule_1689', 'rule_1716', 'rule_1725', 'rule_1734', 'rule_1737', 'rule_1779', 'rule_1786', 'rule_1791', 'rule_1792', 'rule_1797', 'rule_1810', 'rule_1816', 'rule_1825', 'rule_1852', 'rule_1860', 'rule_1863', 'rule_1867', 'rule_1197', 'rule_1206', 'rule_1897', 'rule_1964', 'rule_2144', 'rule_2559', 'rule_2591', 'rule_2605', 'rule_2637', 'rule_2638', 'rule_3027', 'rule_3190', 'rule_3194', 'rule_2948', 'rule_2984', 'rule_1638', 'rule_1649', 'rule_1652', 'rule_1798', 'rule_1868', 'rule_1712', 'rule_1726', 'rule_1781', 'rule_1785', 'rule_1787', 'rule_1789', 'rule_1804', 'rule_1817', 'rule_1855', 'rule_1859', 'rule_1861', 'rule_575', 'rule_588', 'rule_1302', 'rule_1529', 'rule_2178', 'rule_2179', 'rule_2546', 'rule_2547', 'rule_2553', 'rule_2554', 'rule_2598', 'rule_2599', 'rule_2684', 'rule_2685', 'rule_2693', 'rule_2697', 'rule_2712', 'rule_2713', 'rule_2719', 'rule_2720', 'rule_2725', 'rule_2729', 'rule_2734', 'rule_2739', 'rule_2425', 'rule_2428', 'rule_2440', 'rule_2442', 'rule_2477', 'rule_2489', 'rule_1716', 'rule_1725', 'rule_1726', 'rule_1781', 'rule_1798', 'rule_1810', 'rule_1816', 'rule_1817', 'rule_1855', 'rule_1868', 'rule_2408', 'rule_2409', 'rule_2412', 'rule_2413', 'rule_2466', 'rule_2467', 'rule_2695', 'rule_2699', 'rule_2727', 'rule_2732', 'rule_2737', 'rule_2741', 'rule_2505', 'rule_2506', 'rule_2521', 'rule_2522', 'rule_2523', 'rule_2525', 'rule_2880', 'rule_2901', 'rule_2902', 'rule_2942', 'rule_2943', 'rule_2979', 'rule_2691', 'rule_2723', 'rule_2728']
rule_8,rule_44,rule_110,rule_134,rule_137,rule_138,rule_153,rule_157,rule_169,rule_187,rule_226,rule_270,rule_283,rule_330,rule_395,rule_430,rule_448,rule_467,rule_482,rule_498,rule_510,rule_538,rule_548,rule_573,rule_601,rule_626,rule_648,rule_657,rule_668,rule_679,rule_712,rule_720,rule_729,rule_748,rule_772,rule_783,rule_798,rule_803,rule_822,rule_837,rule_842,rule_854,rule_863,rule_897,rule_899,rule_902,rule_904,rule_906,rule_908,rule_910,rule_911,rule_914,rule_915,rule_917,rule_920,rule_922,rule_923,rule_926,rule_928,rule_930,rule_1012,rule_1016,rule_1057,rule_1063,rule_1242,rule_1250,rule_1251,rule_1292,rule_1389,rule_1398,rule_1399,rule_1400,rule_1476,rule_1483,rule_1486,rule_1487,rule_1520,rule_1522,rule_1579,rule_1580,rule_1594,rule_1595,rule_1596,rule_3073,rule_3084,rule_3088,rule_3097,rule_33,rule_41,rule_460,rule_808,rule_898,rule_942,rule_1017,rule_1064,rule_1098,rule_1153,rule_1243,rule_1252,rule_1406,rule_1407,rule_1477,rule_1484,rule_1488,rule_1602,rule_1603,rule_2053,rule_2145,rule_2309,rule_2324,rule_2813,rule_2817,rule_2819,rule_2831,rule_2833,rule_2841,rule_2845,rule_2847,rule_2858,rule_2998,rule_3028,rule_3199,rule_3200,rule_41,rule_156,rule_756,rule_776,rule_901,rule_918,rule_942,rule_2053,rule_2145,rule_2309,rule_2324,rule_2813,rule_2817,rule_2819,rule_2826,rule_2831,rule_2832,rule_2833,rule_2841,rule_2845,rule_2847,rule_2852,rule_2858,rule_2860,rule_2998,rule_3028,rule_3199,rule_3200,rule_3273,rule_3279,rule_3288,rule_3293,rule_21,rule_452,rule_474,rule_478,rule_791,rule_795,rule_1001,rule_1244,rule_1248,rule_1293,rule_1478,rule_1482,rule_1523,rule_2001,rule_2090,rule_2301,rule_2318,rule_2994,rule_3023,rule_3123,rule_3125,rule_3135,rule_438,rule_452,rule_478,rule_795,rule_929,rule_1001,rule_2001,rule_2090,rule_2301,rule_2318,rule_2994,rule_3023,rule_3117,rule_3123,rule_3124,rule_3125,rule_3128,rule_3135,rule_3137,rule_3276,rule_3282,rule_3317,rule_3319,rule_199,rule_542,rule_556,rule_562,rule_831,rule_1007,rule_1018,rule_1065,rule_1216,rule_1221,rule_1245,rule_1249,rule_1285,rule_1289,rule_1307,rule_1310,rule_1312,rule_1317,rule_1325,rule_1331,rule_1413,rule_1418,rule_1461,rule_1479,rule_1485,rule_1518,rule_1535,rule_1538,rule_1540,rule_1544,rule_1609,rule_2649,rule_2672,rule_900,rule_913,rule_47,rule_50,rule_63,rule_69,rule_72,rule_81,rule_83,rule_86,rule_99,rule_102,rule_107,rule_117,rule_121,rule_123,rule_1294,rule_1524,rule_1904,rule_1971,rule_2336,rule_2344,rule_2351,rule_2365,rule_2369,rule_2375,rule_2381,rule_2384,rule_2386,rule_74,rule_79,rule_112,rule_119,rule_2345,rule_2350,rule_2376,rule_2383,rule_177,rule_288,rule_724,rule_912,rule_924,rule_1257,rule_1265,rule_1266,rule_1358,rule_1392,rule_1395,rule_1408,rule_1493,rule_1501,rule_1503,rule_1504,rule_1563,rule_1586,rule_1588,rule_1593,rule_1604,rule_3074,rule_3085,rule_3089,rule_3098,rule_553,rule_2651,rule_2674,rule_1004,rule_1060,rule_1070,rule_2655,rule_2679,rule_122,rule_1030,rule_1082,rule_2385,rule_1099,rule_1154,rule_1258,rule_1267,rule_1494,rule_1505,rule_20,rule_43,rule_109,rule_135,rule_136,rule_154,rule_168,rule_185,rule_197,rule_198,rule_225,rule_269,rule_282,rule_329,rule_394,rule_429,rule_447,rule_459,rule_481,rule_497,rule_509,rule_537,rule_546,rule_547,rule_560,rule_572,rule_600,rule_625,rule_647,rule_655,rule_666,rule_667,rule_676,rule_678,rule_688,rule_697,rule_709,rule_711,rule_719,rule_728,rule_747,rule_771,rule_782,rule_797,rule_802,rule_812,rule_813,rule_814,rule_820,rule_830,rule_847,rule_848,rule_853,rule_866,rule_867,rule_870,rule_872,rule_874,rule_876,rule_878,rule_879,rule_882,rule_883,rule_886,rule_888,rule_889,rule_892,rule_894,rule_896,rule_2824,rule_2851,rule_3072,rule_3087,rule_3116,rule_3127,rule_417,rule_427,rule_515,rule_553,rule_806,rule_859,rule_957,rule_1003,rule_1008,rule_1014,rule_1019,rule_1059,rule_1066,rule_1272,rule_1274,rule_1278,rule_1280,rule_1311,rule_1313,rule_1326,rule_1423,rule_1426,rule_1510,rule_1512,rule_1539,rule_1541,rule_1614,rule_2054,rule_2146,rule_2991,rule_2999,rule_3018,rule_3029,rule_3082,rule_3095,rule_3100,rule_3274,rule_3280,rule_3289,rule_3295,rule_155,rule_868,rule_881,rule_2826,rule_2832,rule_2852,rule_2860,rule_3074,rule_3085,rule_3089,rule_3098,rule_3117,rule_3124,rule_3128,rule_3137,rule_1259,rule_1263,rule_1495,rule_1499,rule_127,rule_146,rule_232,rule_253,rule_338,rule_351,rule_359,rule_361,rule_381,rule_384,rule_390,rule_393,rule_402,rule_406,rule_1030,rule_1082,rule_1516,rule_1898,rule_2214,rule_2224,rule_3278,rule_3284,rule_3326,rule_3328,rule_363,rule_368,rule_397,rule_404,rule_2225,rule_2230,rule_1013,rule_1058,rule_755,rule_775,rule_827,rule_869,rule_884,rule_3211,rule_3229,rule_485,rule_488,rule_495,rule_641,rule_652,rule_654,rule_663,rule_665,rule_691,rule_740,rule_2508,rule_2530,rule_2814,rule_2844,rule_3048,rule_3049,rule_3055,rule_3056,rule_3058,rule_3061,rule_3069,rule_437,rule_895,rule_2256,rule_2288,rule_3216,rule_3233,rule_62,rule_98,rule_1029,rule_1033,rule_1081,rule_1682,rule_1706,rule_1708,rule_2335,rule_2364,rule_2646,rule_2668,rule_2670,rule_1218,rule_1223,rule_1253,rule_1309,rule_1314,rule_1315,rule_1324,rule_1327,rule_1328,rule_1329,rule_1401,rule_1439,rule_1444,rule_1464,rule_1489,rule_1537,rule_1542,rule_1543,rule_1581,rule_1597,rule_1622,rule_1627,rule_3000,rule_3201,rule_3202,rule_407,rule_1260,rule_1264,rule_1308,rule_1496,rule_1500,rule_1502,rule_1536,rule_2648,rule_2671,rule_2680,rule_167,rule_175,rule_176,rule_287,rule_723,rule_805,rule_807,rule_880,rule_890,rule_2141,rule_2823,rule_2850,rule_3071,rule_3086,rule_3115,rule_3126,rule_3158,rule_3217,rule_186,rule_416,rule_466,rule_836,rule_858,rule_865,rule_2416,rule_2434,rule_2436,rule_2470,rule_2483,rule_2485,rule_2828,rule_2854,rule_3076,rule_3091,rule_3119,rule_3130,rule_25,rule_46,rule_120,rule_143,rule_170,rule_201,rule_230,rule_276,rule_286,rule_289,rule_336,rule_405,rule_432,rule_451,rule_461,rule_483,rule_502,rule_513,rule_539,rule_552,rule_577,rule_578,rule_595,rule_597,rule_633,rule_651,rule_672,rule_683,rule_716,rule_722,rule_734,rule_751,rule_774,rule_786,rule_800,rule_804,rule_818,rule_833,rule_852,rule_856,rule_932,rule_934,rule_940,rule_947,rule_955,rule_966,rule_967,rule_974,rule_978,rule_981,rule_982,rule_985,rule_987,rule_988,rule_991,rule_993,rule_995,rule_2124,rule_2155,rule_2451,rule_2496,rule_2526,rule_2541,rule_2838,rule_2859,rule_2989,rule_2995,rule_3008,rule_3083,rule_3136,rule_3307,rule_540,rule_811,rule_921,rule_2080,rule_2084,rule_2158,rule_2159,rule_2161,rule_2163,rule_2503,rule_2514,rule_2543,rule_2582,rule_2586,rule_2597,rule_2627,rule_2631,rule_2647,rule_2648,rule_2656,rule_2671,rule_2680,rule_427,rule_515,rule_806,rule_957,rule_2054,rule_2146,rule_2991,rule_2999,rule_3018,rule_3029,rule_3082,rule_3095,rule_3100,rule_162,rule_936,rule_980,rule_1220,rule_1225,rule_1256,rule_1319,rule_1333,rule_1405,rule_1455,rule_1465,rule_1492,rule_1546,rule_1601,rule_1634,rule_103,rule_118,rule_1023,rule_1078,rule_1211,rule_1458,rule_2302,rule_2370,rule_2382,rule_3024,rule_49,rule_85,rule_212,rule_1232,rule_1236,rule_1466,rule_1470,rule_1728,rule_1820,rule_385,rule_403,rule_1023,rule_1078,rule_1210,rule_1457,rule_1997,rule_130,rule_149,rule_605,rule_611,rule_620,rule_631,rule_632,rule_634,rule_635,rule_2652,rule_2675,rule_769,rule_1000,rule_3275,rule_3281,rule_3316,rule_3318,rule_3212,rule_3230,rule_893,rule_927,rule_3215,rule_3232,rule_759,rule_779,rule_938,rule_983,rule_640,rule_684,rule_717,rule_827,rule_525,rule_684,rule_707,rule_735,rule_805,rule_905,rule_1049,rule_1091,rule_2416,rule_2434,rule_2436,rule_2445,rule_2470,rule_2483,rule_2485,rule_2491,rule_769,rule_1000,rule_2658,rule_2682,rule_2257,rule_2289,rule_3220,rule_3237,rule_441,rule_994,rule_57,rule_76,rule_93,rule_114,rule_2331,rule_2347,rule_2360,rule_2378,rule_350,rule_380,rule_2213,rule_2654,rule_2678,rule_1668,rule_1690,rule_1806,rule_1853,rule_1871,rule_1318,rule_1332,rule_1545,rule_1150,rule_1191,rule_1409,rule_1429,rule_1432,rule_1605,rule_1617,rule_635,rule_1998,rule_2055,rule_2078,rule_2082,rule_2086,rule_2091,rule_2147,rule_2148,rule_2149,rule_2151,rule_2152,rule_2153,rule_178,rule_726,rule_810,rule_979,rule_989,rule_2773,rule_189,rule_887,rule_2150,rule_2154,rule_468,rule_603,rule_839,rule_931,rule_2711,rule_2759,rule_2830,rule_2856,rule_3078,rule_3093,rule_3121,rule_3132,rule_1341,rule_1350,rule_1552,rule_1114,rule_1117,rule_1168,rule_1171,rule_2088,rule_2093,rule_2165,rule_2167,rule_2571,rule_2577,rule_2584,rule_2619,rule_2622,rule_2629,rule_2652,rule_2675,rule_3006,rule_3036,rule_3296,rule_2097,rule_2099,rule_2102,rule_2123,rule_2126,rule_2137,rule_2140,rule_2243,rule_2269,rule_2282,rule_2297,rule_2593,rule_2640,rule_2658,rule_2682,rule_3014,rule_3045,rule_3333,rule_1793,rule_1864,rule_540,rule_811,rule_2080,rule_2084,rule_2161,rule_2163,rule_2503,rule_2514,rule_2526,rule_2541,rule_2586,rule_2631,rule_3008,rule_3307,rule_3274,rule_3280,rule_3289,rule_3295,rule_3278,rule_3284,rule_3326,rule_3328,rule_1412,rule_1431,rule_1434,rule_1608,rule_1619,rule_3150,rule_3157,rule_204,rule_218,rule_1229,rule_1237,rule_1239,rule_1471,rule_1473,rule_1668,rule_1690,rule_1775,rule_1799,rule_1806,rule_1819,rule_1849,rule_1853,rule_1870,rule_1871,rule_632,rule_1590,rule_1625,rule_2656,rule_1583,rule_1624,rule_2064,rule_2076,rule_2540,rule_3099,rule_3175,rule_1793,rule_1864,rule_2064,rule_2540,rule_3099,rule_3175,rule_733,rule_2399,rule_2419,rule_2444,rule_2451,rule_2463,rule_2473,rule_2490,rule_2496,rule_3277,rule_3283,rule_3325,rule_3327,rule_3219,rule_3236,rule_992,rule_2825,rule_524,rule_873,rule_644,rule_2103,rule_2104,rule_2105,rule_2106,rule_2127,rule_2128,rule_2560,rule_2562,rule_2580,rule_2606,rule_2608,rule_2625,rule_2807,rule_2810,rule_2823,rule_2834,rule_2836,rule_2850,rule_2867,rule_2868,rule_2871,rule_2884,rule_2887,rule_2888,rule_2891,rule_2905,rule_2912,rule_2914,rule_2923,rule_2946,rule_2955,rule_2961,rule_2967,rule_2983,rule_3002,rule_3030,rule_3071,rule_3086,rule_3115,rule_3126,rule_3217,rule_3235,rule_534,rule_1048,rule_1090,rule_2085,rule_2086,rule_2089,rule_2091,rule_2105,rule_2106,rule_2109,rule_2110,rule_2112,rule_2113,rule_2114,rule_2117,rule_2119,rule_2120,rule_2121,rule_2124,rule_2141,rule_2147,rule_2149,rule_2150,rule_2151,rule_2153,rule_2154,rule_2155,rule_2158,rule_2159,rule_2543,rule_2560,rule_2582,rule_2597,rule_2606,rule_2627,rule_2647,rule_2807,rule_2834,rule_2867,rule_2868,rule_2871,rule_2884,rule_2887,rule_2888,rule_2891,rule_2905,rule_1212,rule_1214,rule_1268,rule_1440,rule_1459,rule_1506,rule_1623,rule_2177,rule_2180,rule_2181,rule_345,rule_365,rule_375,rule_399,rule_2209,rule_2227,rule_1022,rule_1026,rule_1077,rule_1644,rule_1660,rule_1662,rule_2669,rule_604,rule_619,rule_1787,rule_1856,rule_1856,rule_1861,rule_142,rule_161,rule_643,rule_650,rule_660,rule_671,rule_809,rule_909,rule_933,rule_935,rule_969,rule_973,rule_975,rule_976,rule_1305,rule_1322,rule_1357,rule_1361,rule_1363,rule_1443,rule_1534,rule_1559,rule_1561,rule_1626,rule_2511,rule_2539,rule_3079,rule_3094,rule_3122,rule_3133,rule_3306,rule_3308,rule_3083,rule_3136,rule_3296,rule_1166,rule_2005,rule_2066,rule_3081,rule_3134,rule_3294,rule_1005,rule_1015,rule_1061,rule_32,rule_1115,rule_1169,rule_2450,rule_2495,rule_3286,rule_3291,rule_473,rule_790,rule_2095,rule_2100,rule_2135,rule_2138,rule_2236,rule_2260,rule_2266,rule_2292,rule_2455,rule_2500,rule_3300,rule_3304,rule_986,rule_35,rule_475,rule_793,rule_1197,rule_1206,rule_1207,rule_1403,rule_1599,rule_1933,rule_1990,rule_2144,rule_2591,rule_2637,rule_2638,rule_2861,rule_2864,rule_2997,rule_3012,rule_3169,rule_3170,rule_3189,rule_3193,rule_3195,rule_3196,rule_3331,rule_1166,rule_2005,rule_2066,rule_3081,rule_3134,rule_3294,rule_1114,rule_1117,rule_1168,rule_1171,rule_2088,rule_2093,rule_2165,rule_2167,rule_2571,rule_2577,rule_2584,rule_2619,rule_2622,rule_2629,rule_2989,rule_2995,rule_3006,rule_3036,rule_2097,rule_2099,rule_2102,rule_2123,rule_2126,rule_2137,rule_2140,rule_2243,rule_2269,rule_2282,rule_2297,rule_2593,rule_2640,rule_3014,rule_3045,rule_3333,rule_3176,rule_3177,rule_3191,rule_3192,rule_1213,rule_1215,rule_1271,rule_1456,rule_1460,rule_1509,rule_1635,rule_103,rule_118,rule_122,rule_125,rule_144,rule_246,rule_251,rule_263,rule_265,rule_274,rule_275,rule_277,rule_278,rule_279,rule_662,rule_673,rule_925,rule_1193,rule_1201,rule_1270,rule_1394,rule_1411,rule_1442,rule_1446,rule_1508,rule_1585,rule_1587,rule_1591,rule_1607,rule_1629,rule_1885,rule_1888,rule_1891,rule_1893,rule_1894,rule_1895,rule_1896,rule_1953,rule_1956,rule_1960,rule_1961,rule_1962,rule_1963,rule_1965,rule_1997,rule_2011,rule_2032,rule_2033,rule_2034,rule_2177,rule_2245,rule_2275,rule_2283,rule_2302,rule_2370,rule_2382,rule_2385,rule_2527,rule_3017,rule_3024,rule_3026,rule_3041,rule_3046,rule_2015,rule_2050,rule_2296,rule_3324,rule_2015,rule_2050,rule_2296,rule_3324,rule_1233,rule_1467,rule_1639,rule_1653,rule_1811,rule_1872,rule_1639,rule_1653,rule_1786,rule_1805,rule_1811,rule_1860,rule_1872,rule_1805,rule_1869,rule_765,rule_1262,rule_1498,rule_2122,rule_2125,rule_2657,rule_2681,rule_2863,rule_2866,rule_3013,rule_3044,rule_3329,rule_3330,rule_3332,rule_3277,rule_3283,rule_3325,rule_3327,rule_2875,rule_2875,rule_286,rule_577,rule_586,rule_2838,rule_2859,rule_2510,rule_2532,rule_2534,rule_3213,rule_3214,rule_3231,rule_533,rule_2103,rule_2104,rule_2168,rule_2169,rule_2580,rule_2625,rule_3002,rule_3030,rule_3235,rule_528,rule_950,rule_2879,rule_2900,rule_2941,rule_2978,rule_3212,rule_3230,rule_2247,rule_2250,rule_2257,rule_2277,rule_2280,rule_2289,rule_2886,rule_2908,rule_2949,rule_2985,rule_3220,rule_3237,rule_1113,rule_1115,rule_1167,rule_1169,rule_2450,rule_2495,rule_2879,rule_2900,rule_2094,rule_2095,rule_2098,rule_2100,rule_2108,rule_2116,rule_2135,rule_2138,rule_2236,rule_2247,rule_2266,rule_2277,rule_2455,rule_2500,rule_2886,rule_2908,rule_3194,rule_2657,rule_2681,rule_1776,rule_1794,rule_1850,rule_1865,rule_1800,rule_1873,rule_59,rule_95,rule_1028,rule_1032,rule_1080,rule_1681,rule_1705,rule_1707,rule_2333,rule_2362,rule_2504,rule_2516,rule_2518,rule_2653,rule_2676,rule_2677,rule_505,rule_520,rule_613,rule_628,rule_2842,rule_2058,rule_2839,rule_2857,rule_972,rule_1578,rule_2839,rule_1013,rule_1017,rule_1058,rule_1064,rule_1150,rule_1191,rule_1257,rule_1266,rule_1268,rule_1293,rule_1358,rule_1406,rule_1408,rule_1409,rule_1440,rule_1444,rule_1493,rule_1501,rule_1504,rule_1506,rule_1523,rule_1563,rule_1581,rule_1583,rule_1602,rule_1604,rule_1605,rule_1623,rule_1624,rule_1627,rule_2076,rule_3000,rule_3201,rule_3202,rule_972,rule_2087,rule_2092,rule_2143,rule_2156,rule_2157,rule_2164,rule_2166,rule_2172,rule_2173,rule_2174,rule_2175,rule_2176,rule_809,rule_976,rule_128,rule_131,rule_133,rule_147,rule_150,rule_152,rule_1362,rule_1560,rule_2003,rule_2031,rule_2479,rule_2507,rule_2840,rule_2913,rule_2959,rule_2960,rule_3016,rule_3022,rule_3031,rule_3032,rule_3033,rule_3034,rule_3035,rule_3039,rule_2131,rule_2134,rule_2592,rule_2639,rule_1097,rule_1100,rule_1124,rule_1128,rule_1155,rule_1177,rule_1340,rule_1344,rule_1349,rule_1353,rule_1551,rule_1555,rule_2690,rule_2718,rule_2777,rule_2778,rule_2779,rule_2780,rule_2781,rule_2798,rule_2799,rule_2800,rule_764,rule_2129,rule_2132,rule_2454,rule_2499,rule_2992,rule_2993,rule_3101,rule_3104,rule_3110,rule_3299,rule_3303,rule_767,rule_132,rule_151,rule_653,rule_664,rule_701,rule_733,rule_1048,rule_1090,rule_2114,rule_2121,rule_2399,rule_2419,rule_2444,rule_2463,rule_2473,rule_2490,rule_2808,rule_2811,rule_2835,rule_2837,rule_2869,rule_2872,rule_2883,rule_2889,rule_2892,rule_2906,rule_2915,rule_2924,rule_2962,rule_2968,rule_2059,rule_2060,rule_3249,rule_3250,rule_3251,rule_2058,rule_2857,rule_2122,rule_2125,rule_2131,rule_2134,rule_2592,rule_2639,rule_3013,rule_3044,rule_3332,rule_3102,rule_3106,rule_3112,rule_1801,rule_1874,rule_275,rule_1105,rule_1158,rule_1884,rule_1952,rule_1890,rule_1958,rule_231,rule_235,rule_252,rule_256,rule_265,rule_278,rule_297,rule_305,rule_322,rule_338,rule_385,rule_390,rule_403,rule_407,rule_2187,rule_2507,rule_2519,rule_919,rule_1260,rule_1261,rule_1265,rule_1270,rule_1308,rule_1311,rule_1376,rule_1379,rule_1392,rule_1394,rule_1407,rule_1411,rule_1496,rule_1497,rule_1503,rule_1508,rule_1536,rule_1539,rule_1565,rule_1568,rule_1585,rule_1586,rule_1587,rule_1590,rule_1591,rule_1603,rule_1607,rule_2011,rule_2032,rule_2033,rule_2034,rule_2283,rule_2527,rule_3017,rule_3026,rule_3041,rule_3046,rule_1205,rule_3015,rule_3322,rule_1271,rule_1395,rule_1412,rule_1456,rule_1509,rule_1593,rule_1608,rule_1635,rule_3150,rule_3157,rule_1869,rule_2666,rule_585,rule_535,rule_2170,rule_2171,rule_2822,rule_2849,rule_717,rule_2878,rule_2899,rule_2940,rule_2977,rule_1021,rule_1025,rule_1076,rule_1643,rule_1659,rule_1661,rule_2643,rule_2660,rule_2664,rule_347,rule_377,rule_2211,rule_3039,rule_2246,rule_2249,rule_2276,rule_2279,rule_2882,rule_2904,rule_2945,rule_2981,rule_2043,rule_3323,rule_1776,rule_1794,rule_1850,rule_1865,rule_1233,rule_1237,rule_1467,rule_1471,rule_1799,rule_1800,rule_1870,rule_1873,rule_1588,rule_1099,rule_1154,rule_1258,rule_1267,rule_1494,rule_1505,rule_1259,rule_1263,rule_1495,rule_1499,rule_1116,rule_1170,rule_2096,rule_2101,rule_2136,rule_2139,rule_2947,rule_2982,rule_3218,rule_3234,rule_2087,rule_2092,rule_2143,rule_2156,rule_2157,rule_2164,rule_2166,rule_2172,rule_2173,rule_2174,rule_2175,rule_2176,rule_1362,rule_1484,rule_1560,rule_2003,rule_2031,rule_2840,rule_2842,rule_3022,rule_3034,rule_3035,rule_2479,rule_3033,rule_3038,rule_2478,rule_3004,rule_3007,rule_3027,rule_3190,rule_3020,rule_3021,rule_3105,rule_3111,rule_707,rule_735,rule_1049,rule_1091,rule_2445,rule_2491,rule_1717,rule_1731,rule_1780,rule_1812,rule_1822,rule_1854,rule_2043,rule_3323,rule_1107,rule_1160,rule_1902,rule_1969,rule_1927,rule_1985,rule_1889,rule_1957,rule_1193,rule_1201,rule_1885,rule_1887,rule_1887,rule_1891,rule_1893,rule_1896,rule_1953,rule_1955,rule_1955,rule_1960,rule_1963,rule_1965,rule_2187,rule_2186,rule_1801,rule_1874,rule_2748,rule_589,rule_2427,rule_2441,rule_2476,rule_2488,rule_2509,rule_2531,rule_3180,rule_3181,rule_1665,rule_1666,rule_1684,rule_1685,rule_1687,rule_1688,rule_1710,rule_1711,rule_1732,rule_1733,rule_1735,rule_1736,rule_1740,rule_1746,rule_1765,rule_1771,rule_1802,rule_1803,rule_1823,rule_1824,rule_1828,rule_1834,rule_1840,rule_1846,rule_568,rule_581,rule_1262,rule_1498,rule_3329,rule_3330,rule_2130,rule_2133,rule_1116,rule_1170,rule_2096,rule_2101,rule_2136,rule_2139,rule_3040,rule_2478,rule_2957,rule_2988,rule_3004,rule_2700,rule_3009,rule_2810,rule_2836,rule_2914,rule_2923,rule_2946,rule_2961,rule_2967,rule_1339,rule_1348,rule_1550,rule_2767,rule_2770,rule_2793,rule_2085,rule_2089,rule_2109,rule_2110,rule_2112,rule_2113,rule_2117,rule_2119,rule_2120,rule_1713,rule_1788,rule_1790,rule_1807,rule_1862,rule_1744,rule_1752,rule_1762,rule_1769,rule_1832,rule_1844,rule_1924,rule_1983,rule_1254,rule_1269,rule_1287,rule_1291,rule_1371,rule_1385,rule_1393,rule_1393,rule_1396,rule_1397,rule_1402,rule_1410,rule_1437,rule_1438,rule_1447,rule_1448,rule_1449,rule_1452,rule_1490,rule_1507,rule_1521,rule_1577,rule_1589,rule_1589,rule_1592,rule_1598,rule_1606,rule_1621,rule_1630,rule_1631,rule_1451,rule_1454,rule_1633,rule_1105,rule_1158,rule_1884,rule_1952,rule_1890,rule_1958,rule_1672,rule_1672,rule_1692,rule_1692,rule_1886,rule_1886,rule_1888,rule_1894,rule_1895,rule_1954,rule_1954,rule_1956,rule_1961,rule_1962,rule_2941,rule_2978,rule_2542,rule_2544,rule_2596,rule_2642,rule_2644,rule_2659,rule_2661,rule_2663,rule_2665,rule_2690,rule_2718,rule_2777,rule_2798,rule_2072,rule_2073,rule_2205,rule_2206,rule_2234,rule_3254,rule_3259,rule_3260,rule_2250,rule_2280,rule_2949,rule_2985,rule_1636,rule_1637,rule_1647,rule_1648,rule_1650,rule_1651,rule_1714,rule_1715,rule_1747,rule_1772,rule_1808,rule_1809,rule_1835,rule_1847,rule_2701,rule_1741,rule_1743,rule_1751,rule_1758,rule_1761,rule_1766,rule_1768,rule_1784,rule_1829,rule_1831,rule_1838,rule_1841,rule_1843,rule_1858,rule_1897,rule_1964,rule_2180,rule_2181,rule_2885,rule_2907,rule_2948,rule_2984,rule_3219,rule_3236,rule_2130,rule_2133,rule_1304,rule_1321,rule_1533,rule_1113,rule_1167,rule_2094,rule_2098,rule_2108,rule_2116,rule_2199,rule_2200,rule_2223,rule_2700,rule_1269,rule_1507,rule_1107,rule_1160,rule_1902,rule_1969,rule_1450,rule_1453,rule_1632,rule_1927,rule_1985,rule_1889,rule_1957,rule_2427,rule_2441,rule_2476,rule_2488,rule_2548,rule_2555,rule_2600,rule_2686,rule_2705,rule_2714,rule_2721,rule_2747,rule_2751,rule_2704,rule_2746,rule_2127,rule_2128,rule_2562,rule_2608,rule_2912,rule_2955,rule_2983,rule_2016,rule_2017,rule_2018,rule_2019,rule_2035,rule_2036,rule_2189,rule_2190,rule_2191,rule_2192,rule_2195,rule_2196,rule_2207,rule_2216,rule_2220,rule_2447,rule_2448,rule_2493,rule_2877,rule_2897,rule_2898,rule_3053,rule_3065,rule_3066,rule_1302,rule_1529,rule_2178,rule_2179,rule_1717,rule_1731,rule_1812,rule_1822,rule_2870,rule_2890,rule_2701,rule_2960,rule_3016,rule_2876,rule_2896,rule_2567,rule_2610,rule_2612,rule_737,rule_746,rule_1042,rule_1050,rule_1092,rule_2107,rule_2115,rule_2129,rule_2132,rule_2254,rule_2255,rule_2286,rule_2400,rule_2406,rule_2420,rule_2423,rule_2443,rule_2446,rule_2454,rule_2464,rule_2474,rule_2492,rule_2499,rule_2876,rule_2885,rule_2896,rule_2907,rule_2911,rule_2958,rule_3020,rule_3021,rule_2238,rule_2241,rule_2271,rule_2569,rule_2611,rule_2616,rule_594,rule_2056,rule_2057,rule_2197,rule_2198,rule_2221,rule_3205,rule_3206,rule_3226,rule_1924,rule_1983,rule_1207,rule_3331,rule_1205,rule_3322,rule_569,rule_582,rule_2394,rule_2401,rule_2407,rule_2410,rule_2411,rule_2414,rule_2459,rule_2465,rule_2468,rule_2645,rule_2662,rule_2667,rule_2702,rule_2742,rule_2743,rule_1303,rule_1320,rule_1532,rule_1714,rule_1715,rule_1741,rule_1747,rule_1758,rule_1766,rule_1772,rule_1784,rule_1808,rule_1809,rule_1829,rule_1835,rule_1838,rule_1841,rule_1847,rule_1858,rule_2870,rule_2881,rule_2890,rule_2903,rule_2944,rule_2980,rule_1264,rule_1500,rule_1502,rule_2920,rule_2964,rule_3105,rule_3111,rule_2957,rule_2988,rule_1625,rule_1578,rule_2730,rule_2735,rule_2809,rule_2812,rule_1038,rule_1044,rule_1086,rule_2707,rule_2750,rule_2753,rule_2692,rule_2724,rule_2692,rule_2724,rule_1667,rule_1686,rule_1689,rule_1716,rule_1725,rule_1734,rule_1737,rule_1779,rule_1786,rule_1791,rule_1792,rule_1797,rule_1810,rule_1816,rule_1825,rule_1852,rule_1860,rule_1863,rule_1867,rule_1197,rule_1206,rule_1897,rule_1964,rule_2144,rule_2559,rule_2591,rule_2605,rule_2637,rule_2638,rule_3027,rule_3190,rule_3194,rule_2948,rule_2984,rule_1638,rule_1649,rule_1652,rule_1798,rule_1868,rule_1712,rule_1726,rule_1781,rule_1785,rule_1787,rule_1789,rule_1804,rule_1817,rule_1855,rule_1859,rule_1861,rule_575,rule_588,rule_1302,rule_1529,rule_2178,rule_2179,rule_2546,rule_2547,rule_2553,rule_2554,rule_2598,rule_2599,rule_2684,rule_2685,rule_2693,rule_2697,rule_2712,rule_2713,rule_2719,rule_2720,rule_2725,rule_2729,rule_2734,rule_2739,rule_2425,rule_2428,rule_2440,rule_2442,rule_2477,rule_2489,rule_1716,rule_1725,rule_1726,rule_1781,rule_1798,rule_1810,rule_1816,rule_1817,rule_1855,rule_1868,rule_2408,rule_2409,rule_2412,rule_2413,rule_2466,rule_2467,rule_2695,rule_2699,rule_2727,rule_2732,rule_2737,rule_2741,rule_2505,rule_2506,rule_2521,rule_2522,rule_2523,rule_2525,rule_2880,rule_2901,rule_2902,rule_2942,rule_2943,rule_2979,rule_2691,rule_2723,rule_2728 failed!
[call murphi]compile murphi to cpp....
command1 = /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/src/mu ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.m
command2 = g++ -ggdb -o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.cpp -I /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/include -lm
command3 = ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_checkByMurphi.o -m1000 -finderrors -ndl
compile murphi file to cpp....
Code generated
compile .cpp to .o file....
running .o file....
counter_ex:[]
******************************
Expansion
Instantiating rules...
Expansion result: before : 1577, after: 2177
<class 'list'>
******************************
Abstract and Strengthen


[Rulename]: NI_Replace3
guard:{'Sta.Dir.ShrVld', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule NI_Replace3 has 1 parameter.
action part is empty


[Rulename]: NI_Replace4
guard:{'!Sta.Dir.ShrVld', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule NI_Replace4 has 1 parameter.
action part is empty


[Rulename]: NI_InvAck_311
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = true', 'NODE_2 = NODE_1 | Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.Dir.HomeInvSet = false'}
Strengthening 1 time, find 23 predicates

include 1 abstract type

Rule NI_InvAck_311 has 1 parameter.

Print abstract rule of NI_InvAck_311, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false;


[Rulename]: NI_InvAck_212
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Local = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false'}
Strengthening 1 time, find 32 predicates

include 1 abstract type

Rule NI_InvAck_212 has 1 parameter.

Print abstract rule of NI_InvAck_212, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false;


[Rulename]: NI_InvAck_113
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_InvAck_113 has 1 parameter.

Print abstract rule of NI_InvAck_113, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false ;
	Sta.Dir.Local := false;


[Rulename]: NI_InvAck_exists14
guard:{'Sta.Dir.InvSet[NODE_1]', 'Sta.Dir.InvSet[NODE_2] = true', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck', 'Sta.Dir.Pending = true', 'NODE_1 != NODE_2'}
Strengthening 1 time, find 23 predicates

include 2 abstract type

Rule NI_InvAck_exists14 has 2 parameter.

Print abstract rule of NI_InvAck_exists14, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.InvMsg[NODE_2].Cmd := INV_None ;
	Sta.Dir.InvSet[NODE_2] := false;
action part is empty
action part is empty


[Rulename]: NI_InvAck_exists_Home15
guard:{'Sta.Dir.HomeInvSet', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck'}
Strengthening 1 time, find 23 predicates

include 1 abstract type

Rule NI_InvAck_exists_Home15 has 1 parameter.
action part is empty


[Rulename]: NI_Inv16
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd = NODE_Get'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_Inv16 has 1 parameter.
action part is empty


[Rulename]: NI_Inv17
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_Inv17 has 1 parameter.
action part is empty


[Rulename]: NI_Remote_PutX18
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_PutX', 'Sta.Proc[NODE_1].ProcCmd = NODE_GetX'}
Strengthening 1 time, find 26 predicates

include 1 abstract type

Rule NI_Remote_PutX18 has 1 parameter.
stmt:Sta.Proc[NODE_1].CacheData := Sta.UniMsg[NODE_1].Data,assign:Sta.UniMsg[NODE_1].Data,rep_dict[assign]:Sta.CurrData
stmt:Sta.Proc[NODE_1].CacheData := Sta.CurrData
action part is empty


[Rulename]: NI_Remote_Put20
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Put', 'Sta.Proc[NODE_1].InvMarked'}
Strengthening 1 time, find 8 predicates

include 1 abstract type

Rule NI_Remote_Put20 has 1 parameter.
action part is empty


[Rulename]: NI_Remote_Put21
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Put', '!Sta.Proc[NODE_1].InvMarked'}
Strengthening 1 time, find 8 predicates

include 1 abstract type

Rule NI_Remote_Put21 has 1 parameter.
action part is empty


[Rulename]: NI_Remote_GetX_PutX_Home24
guard:{'Sta.HomeUniMsg.Cmd = UNI_GetX', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Remote_GetX_PutX_Home24 has 1 parameter.
stmt:Sta.HomeUniMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.HomeUniMsg.Data := Sta.CurrData

Print abstract rule of NI_Remote_GetX_PutX_Home24, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_PutX ;
	Sta.HomeUniMsg.Data := Sta.CurrData;


[Rulename]: NI_Remote_GetX_PutX25
guard:{'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'NODE_2 != NODE_1'}
Strengthening 1 time, find 38 predicates

include 2 abstract type

Rule NI_Remote_GetX_PutX25 has 2 parameter.
stmt:Sta.UniMsg[NODE_2].Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.UniMsg[NODE_2].Data := Sta.CurrData

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.CurrData ;
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;


[Rulename]: NI_Remote_GetX_Nak_Home26
guard:{'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.Cmd = UNI_GetX', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Remote_GetX_Nak_Home26 has 1 parameter.

Print abstract rule of NI_Remote_GetX_Nak_Home26, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;


[Rulename]: NI_Remote_GetX_Nak27
guard:{'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'NODE_2 != NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E'}
Strengthening 1 time, find 25 predicates

include 2 abstract type

Rule NI_Remote_GetX_Nak27 has 2 parameter.

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;


[Rulename]: NI_Local_GetX_PutX_1128
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState = CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_1128 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_1128, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_1029
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadVld', 'Sta.Dir.HomeHeadPtr = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc'}
Strengthening 1 time, find 20 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_1029 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData;

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;


[Rulename]: NI_Local_GetX_PutX_10_Home30
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadVld', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_10_Home30 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_10_Home30, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;


[Rulename]: NI_Local_GetX_PutX_931
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadVld', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_931 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_931, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;


[Rulename]: NI_Local_GetX_PutX_932
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadVld', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_932 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_932, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;


[Rulename]: NI_Local_GetX_PutX_8_NODE_Get33
guard:{'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc'}
Strengthening 1 time, find 20 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_8_NODE_Get33 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_834
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc'}
Strengthening 1 time, find 20 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_834 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I;

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_8_Home_NODE_Get35
guard:{'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.HomeShrSet', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home_NODE_Get35 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_Home_NODE_Get35, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_8_Home36
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home36 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_Home36, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get37
guard:{'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get37 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get37, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get38
guard:{'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get38 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get38, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_739
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_739 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_739, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_740
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_740 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_740, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_641
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Local = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HomeShrSet = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_641 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_641, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_542
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HomeShrSet = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_542 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_542, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_443
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HomeShrSet = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_443 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_443, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_PutX_344
guard:{'Sta.Dir.HeadVld = false', 'Sta.Dir.Local = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 25 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_344 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_344, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_245
guard:{'Sta.Dir.HeadVld = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.Local = true', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 25 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_245 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_245, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;


[Rulename]: NI_Local_GetX_PutX_146
guard:{'Sta.Dir.HeadVld = false', 'Sta.Dir.Local = true', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 25 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_146 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_146, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;


[Rulename]: NI_Local_GetX_GetX47
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX47 has 1 parameter.

Print abstract rule of NI_Local_GetX_GetX47, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;


[Rulename]: NI_Local_GetX_GetX48
guard:{'Sta.Dir.Local = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX48 has 1 parameter.

Print abstract rule of NI_Local_GetX_GetX48, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;


[Rulename]: NI_Local_GetX_Nak49
guard:{'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 10 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak49 has 1 parameter.
action part is empty


[Rulename]: NI_Local_GetX_Nak50
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState != CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 18 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak50 has 1 parameter.
action part is empty


[Rulename]: NI_Local_GetX_Nak51
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 17 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak51 has 1 parameter.
action part is empty


[Rulename]: NI_Remote_Get_Put_Home52
guard:{'Sta.HomeUniMsg.Cmd = UNI_Get', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Remote_Get_Put_Home52 has 1 parameter.
stmt:Sta.HomeUniMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.HomeUniMsg.Data := Sta.CurrData

Print abstract rule of NI_Remote_Get_Put_Home52, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Put ;
	Sta.HomeUniMsg.Data := Sta.CurrData;


[Rulename]: NI_Remote_Get_Put53
guard:{'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'NODE_2 != NODE_1'}
Strengthening 1 time, find 38 predicates

include 2 abstract type

Rule NI_Remote_Get_Put53 has 2 parameter.
stmt:Sta.UniMsg[NODE_2].Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.UniMsg[NODE_2].Data := Sta.CurrData
stmt:Sta.ShWbMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.ShWbMsg.Data := Sta.CurrData

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Put ;
	Sta.UniMsg[NODE_2].Data := Sta.CurrData ;
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;


[Rulename]: NI_Remote_Get_Nak_Home54
guard:{'Sta.HomeUniMsg.Cmd = UNI_Get', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Remote_Get_Nak_Home54 has 1 parameter.

Print abstract rule of NI_Remote_Get_Nak_Home54, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;


[Rulename]: NI_Remote_Get_Nak55
guard:{'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'NODE_2 != NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E'}
Strengthening 1 time, find 25 predicates

include 2 abstract type

Rule NI_Remote_Get_Nak55 has 2 parameter.

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;


[Rulename]: NI_Local_Get_Put_Dirty56
guard:{'Sta.Dir.Local = true', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState = CACHE_E'}
Strengthening 1 time, find 23 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Dirty56 has 1 parameter.

Print abstract rule of NI_Local_Get_Put_Dirty56, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Dirty := false ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.MemData := Sta.HomeProc.CacheData ;
	Sta.HomeProc.CacheState := CACHE_S;


[Rulename]: NI_Local_Get_Put57
guard:{'Sta.Dir.HeadVld = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 24 predicates

include 1 abstract type

Rule NI_Local_Get_Put57 has 1 parameter.

Print abstract rule of NI_Local_Get_Put57, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false;


[Rulename]: NI_Local_Get_Put_Head58
guard:{'Sta.Dir.HeadVld', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 19 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Head58 has 1 parameter.

Print abstract rule of NI_Local_Get_Put_Head58, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.ShrVld := true ;
	for p : NODE do
    if (p = Other) then
      Sta.Dir.InvSet[p] := true ;
	else
      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p] ;
	Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet;


[Rulename]: NI_Local_Get_Get59
guard:{'Sta.Dir.Local = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 19 predicates

include 1 abstract type

Rule NI_Local_Get_Get59 has 1 parameter.

Print abstract rule of NI_Local_Get_Get59, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;


[Rulename]: NI_Local_Get_Get60
guard:{'Sta.Dir.Local = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HomeHeadPtr = true'}
Strengthening 1 time, find 19 predicates

include 1 abstract type

Rule NI_Local_Get_Get60 has 1 parameter.

Print abstract rule of NI_Local_Get_Get60, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;


[Rulename]: NI_Local_Get_Nak61
guard:{'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Pending = true'}
Strengthening 1 time, find 9 predicates

include 1 abstract type

Rule NI_Local_Get_Nak61 has 1 parameter.
action part is empty


[Rulename]: NI_Local_Get_Nak62
guard:{'Sta.Dir.Local = true', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState != CACHE_E'}
Strengthening 1 time, find 17 predicates

include 1 abstract type

Rule NI_Local_Get_Nak62 has 1 parameter.
action part is empty


[Rulename]: NI_Local_Get_Nak63
guard:{'Sta.Dir.Local = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 16 predicates

include 1 abstract type

Rule NI_Local_Get_Nak63 has 1 parameter.
action part is empty


[Rulename]: NI_Nak66
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Nak'}
Strengthening 1 time, find 4 predicates

include 1 abstract type

Rule NI_Nak66 has 1 parameter.
action part is empty


[Rulename]: PI_Remote_Replace68
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_S', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule PI_Remote_Replace68 has 1 parameter.
action part is empty


[Rulename]: PI_Remote_PutX71
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule PI_Remote_PutX71 has 1 parameter.
stmt:Sta.WbMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.WbMsg.Data := Sta.CurrData

Print abstract rule of PI_Remote_PutX71, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.WbMsg.Cmd := WB_Wb ;
	Sta.WbMsg.Proc := Other ;
	Sta.WbMsg.HomeProc := false ;
	Sta.WbMsg.Data := Sta.CurrData;


[Rulename]: PI_Remote_GetX80
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_I', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 6 predicates

include 1 abstract type

Rule PI_Remote_GetX80 has 1 parameter.
action part is empty


[Rulename]: PI_Remote_Get84
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_I', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 6 predicates

include 1 abstract type

Rule PI_Remote_Get84 has 1 parameter.
action part is empty


[Rulename]: Store_Home85
guard:{'Sta.HomeProc.CacheState = CACHE_E'}
Strengthening 1 time, find 0 predicates

include 0 abstract type

Rule Store_Home85 has no parameter.


[Rulename]: Store86
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule Store86 has 1 parameter.

Print abstract rule of Store86, abstract NODE_1
para_dcit:{'DATA_1': 'DATA', 'NODE_1': 'NODE'}
action:
	Sta.CurrData := DATA_1;
select candidate association rules: before: 2177, after: 130
Symmetry reducing rules...
Remove redundant: before : 130, after: 130
all_types:{'NODE': 'NODE_NUM', 'DATA': 'DATA_NUM'}
Reduction result: before : 130, after: 107
******************************
Recheck rules by murphi


[Rulename]: NI_Replace3
guard:{'Sta.Dir.ShrVld', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Replace3 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Replace4
guard:{'!Sta.Dir.ShrVld', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Replace4 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_InvAck_311
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = true', 'NODE_2 = NODE_1 | Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.Dir.HomeInvSet = false'}
Strengthening 1 time, find 14 predicates

include 1 abstract type

Rule NI_InvAck_311 has 1 parameter.

Print abstract rule of NI_InvAck_311, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false;
-- Auxiliary invariants used by NI_InvAck_311: 19
string_list:['Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Dir.Dirty = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.Dir.Dirty = true & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb']


[Rulename]: NI_InvAck_212
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Local = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false'}
Strengthening 1 time, find 19 predicates

include 1 abstract type

Rule NI_InvAck_212 has 1 parameter.

Print abstract rule of NI_InvAck_212, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false;
-- Auxiliary invariants used by NI_InvAck_212: 22
string_list:['Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.Local = false & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Dirty = false', 'Sta.Dir.Local = false & Sta.Dir.InvSet[NODE_1] = true -> Sta.MemData = Sta.CurrData', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.Dir.Local = false & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.Local = false & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.ShrVld = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.Dir.Local = false & Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Pending = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb']


[Rulename]: NI_InvAck_113
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false'}
Strengthening 1 time, find 14 predicates

include 1 abstract type

Rule NI_InvAck_113 has 1 parameter.

Print abstract rule of NI_InvAck_113, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := false ;
	Sta.Dir.Local := false;
-- Auxiliary invariants used by NI_InvAck_113: 16
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb']


[Rulename]: NI_InvAck_exists14
guard:{'Sta.Dir.InvSet[NODE_1]', 'Sta.Dir.InvSet[NODE_2] = true', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck', 'Sta.Dir.Pending = true', 'NODE_1 != NODE_2'}
Strengthening 1 time, find 9 predicates

include 2 abstract type

Rule NI_InvAck_exists14 has 2 parameter.

Print abstract rule of NI_InvAck_exists14, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.InvMsg[NODE_2].Cmd := INV_None ;
	Sta.Dir.InvSet[NODE_2] := false;
action part is empty
action part is empty
-- Auxiliary invariants used by NI_InvAck_exists14: 10
string_list:['Sta.Dir.InvSet[NODE_2] = true -> Sta.UniMsg[NODE_1].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.Dir.InvSet[NODE_2] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_2] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_1']


[Rulename]: NI_InvAck_exists_Home15
guard:{'Sta.Dir.HomeInvSet', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck'}
Strengthening 1 time, find 14 predicates

include 1 abstract type

Rule NI_InvAck_exists_Home15 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_InvAck_exists_Home15: 17
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb']


[Rulename]: NI_Inv16
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd = NODE_Get'}
Strengthening 1 time, find 16 predicates

include 1 abstract type

Rule NI_Inv16 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Inv16: 16
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Pending = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr = NODE_1', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr != NODE_2']


[Rulename]: NI_Inv17
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get'}
Strengthening 1 time, find 16 predicates

include 1 abstract type

Rule NI_Inv17 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Inv17: 16
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Pending = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr = NODE_1', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr != NODE_2']


[Rulename]: NI_Remote_PutX18
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_PutX', 'Sta.Proc[NODE_1].ProcCmd = NODE_GetX'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule NI_Remote_PutX18 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Remote_PutX18: 12
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.HeadVld = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.ShrSet[NODE_2] = false']


[Rulename]: NI_Remote_Put20
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Put', 'Sta.Proc[NODE_1].InvMarked'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule NI_Remote_Put20 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Remote_Put20: 1
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.ShWbMsg.Cmd != SHWB_FAck']


[Rulename]: NI_Remote_Put21
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Put', '!Sta.Proc[NODE_1].InvMarked'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule NI_Remote_Put21 has 1 parameter.
action part is empty
-- Auxiliary invariants used by NI_Remote_Put21: 1
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.ShWbMsg.Cmd != SHWB_FAck']


[Rulename]: NI_Remote_GetX_PutX_Home24
guard:{'Sta.HomeUniMsg.Cmd = UNI_GetX', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule NI_Remote_GetX_PutX_Home24 has 1 parameter.

Print abstract rule of NI_Remote_GetX_PutX_Home24, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_PutX;
-- Auxiliary invariants used by NI_Remote_GetX_PutX_Home24: 12
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false']


[Rulename]: NI_Remote_GetX_PutX25
guard:{'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'NODE_2 != NODE_1'}
Strengthening 1 time, find 23 predicates

include 2 abstract type

Rule NI_Remote_GetX_PutX25 has 2 parameter.

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;
-- Auxiliary invariants used by NI_Remote_GetX_PutX25: 26
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false']


[Rulename]: NI_Remote_GetX_Nak_Home26
guard:{'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.Cmd = UNI_GetX', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Remote_GetX_Nak_Home26 has 1 parameter.

Print abstract rule of NI_Remote_GetX_Nak_Home26, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;
string_list:[]


[Rulename]: NI_Remote_GetX_Nak27
guard:{'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'NODE_2 != NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E'}
Strengthening 1 time, find 14 predicates

include 2 abstract type

Rule NI_Remote_GetX_Nak27 has 2 parameter.

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;
-- Auxiliary invariants used by NI_Remote_GetX_Nak27: 14
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2']


[Rulename]: NI_Local_GetX_PutX_1128
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState = CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_1128 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_1128, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_1029
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadVld', 'Sta.Dir.HomeHeadPtr = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc'}
Strengthening 1 time, find 1 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_1029 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData;

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
-- Auxiliary invariants used by NI_Local_GetX_PutX_1029: 2
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Dir.HeadPtr = NODE_2 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_10_Home30
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadVld', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_10_Home30 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_10_Home30, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_931
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadVld', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_931 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_931, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_932
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadVld', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_932 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_932, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_8_NODE_Get33
guard:{'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc'}
Strengthening 1 time, find 1 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_8_NODE_Get33 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
-- Auxiliary invariants used by NI_Local_GetX_PutX_8_NODE_Get33: 3
string_list:['Sta.Dir.HeadPtr = NODE_2 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Local = true -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_834
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc'}
Strengthening 1 time, find 1 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_834 has 2 parameter.

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I;

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_834: 3
string_list:['Sta.Dir.HeadPtr = NODE_2 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Local = true -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_8_Home_NODE_Get35
guard:{'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.HomeShrSet', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home_NODE_Get35 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_Home_NODE_Get35, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_8_Home36
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home36 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_8_Home36, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get37
guard:{'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get37 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get37, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get38
guard:{'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get38 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get38, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_739
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_739 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_739, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_740
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.HeadVld', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_740 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_740, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_641
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Local = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HomeShrSet = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_641 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_641, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_542
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.HomeProc.ProcCmd != NODE_Get', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HomeShrSet = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_542 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_542, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_443
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = false', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.HomeShrSet = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_443 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_443, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_344
guard:{'Sta.Dir.HeadVld = false', 'Sta.Dir.Local = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_344 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_344, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_245
guard:{'Sta.Dir.HeadVld = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.Local = true', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_245 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_245, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
string_list:[]


[Rulename]: NI_Local_GetX_PutX_146
guard:{'Sta.Dir.HeadVld = false', 'Sta.Dir.Local = true', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_146 has 1 parameter.

Print abstract rule of NI_Local_GetX_PutX_146, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
string_list:[]


[Rulename]: NI_Local_GetX_GetX47
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX47 has 1 parameter.

Print abstract rule of NI_Local_GetX_GetX47, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;
string_list:[]


[Rulename]: NI_Local_GetX_GetX48
guard:{'Sta.Dir.Local = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX48 has 1 parameter.

Print abstract rule of NI_Local_GetX_GetX48, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;
string_list:[]


[Rulename]: NI_Local_GetX_Nak49
guard:{'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak49 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Local_GetX_Nak50
guard:{'Sta.Dir.Local = true', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState != CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak50 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Local_GetX_Nak51
guard:{'Sta.Dir.Local = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak51 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Remote_Get_Put_Home52
guard:{'Sta.HomeUniMsg.Cmd = UNI_Get', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule NI_Remote_Get_Put_Home52 has 1 parameter.

Print abstract rule of NI_Remote_Get_Put_Home52, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Put;
-- Auxiliary invariants used by NI_Remote_Get_Put_Home52: 12
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false']


[Rulename]: NI_Remote_Get_Put53
guard:{'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'NODE_2 != NODE_1'}
Strengthening 1 time, find 23 predicates

include 2 abstract type

Rule NI_Remote_Get_Put53 has 2 parameter.

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Put ;
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;
-- Auxiliary invariants used by NI_Remote_Get_Put53: 26
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false']


[Rulename]: NI_Remote_Get_Nak_Home54
guard:{'Sta.HomeUniMsg.Cmd = UNI_Get', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Remote_Get_Nak_Home54 has 1 parameter.

Print abstract rule of NI_Remote_Get_Nak_Home54, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;
string_list:[]


[Rulename]: NI_Remote_Get_Nak55
guard:{'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'NODE_2 != NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E'}
Strengthening 1 time, find 14 predicates

include 2 abstract type

Rule NI_Remote_Get_Nak55 has 2 parameter.

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;
-- Auxiliary invariants used by NI_Remote_Get_Nak55: 14
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get & Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv']


[Rulename]: NI_Local_Get_Put_Dirty56
guard:{'Sta.Dir.Local = true', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState = CACHE_E'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Dirty56 has 1 parameter.

Print abstract rule of NI_Local_Get_Put_Dirty56, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Dirty := false ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.MemData := Sta.HomeProc.CacheData ;
	Sta.HomeProc.CacheState := CACHE_S;
string_list:[]


[Rulename]: NI_Local_Get_Put57
guard:{'Sta.Dir.HeadVld = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Put57 has 1 parameter.

Print abstract rule of NI_Local_Get_Put57, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false;
string_list:[]


[Rulename]: NI_Local_Get_Put_Head58
guard:{'Sta.Dir.HeadVld', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = false', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Head58 has 1 parameter.

Print abstract rule of NI_Local_Get_Put_Head58, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.ShrVld := true ;
	for p : NODE do
    if (p = Other) then
      Sta.Dir.InvSet[p] := true ;
	else
      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p] ;
	Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet;
string_list:[]


[Rulename]: NI_Local_Get_Get59
guard:{'Sta.Dir.Local = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Get59 has 1 parameter.

Print abstract rule of NI_Local_Get_Get59, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;
string_list:[]


[Rulename]: NI_Local_Get_Get60
guard:{'Sta.Dir.Local = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.Dir.HomeHeadPtr = true'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Get60 has 1 parameter.

Print abstract rule of NI_Local_Get_Get60, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.Dir.Pending := true;
string_list:[]


[Rulename]: NI_Local_Get_Nak61
guard:{'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Pending = true'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Nak61 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Local_Get_Nak62
guard:{'Sta.Dir.Local = true', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.HomeProc.CacheState != CACHE_E'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Nak62 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Local_Get_Nak63
guard:{'Sta.Dir.Local = false', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Local_Get_Nak63 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: NI_Nak66
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Nak'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule NI_Nak66 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: PI_Remote_Replace68
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_S', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 1 predicates

include 1 abstract type

Rule PI_Remote_Replace68 has 1 parameter.
action part is empty
-- Auxiliary invariants used by PI_Remote_Replace68: 1
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.ShWbMsg.Cmd != SHWB_FAck']


[Rulename]: PI_Remote_PutX71
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule PI_Remote_PutX71 has 1 parameter.

Print abstract rule of PI_Remote_PutX71, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
action:
	Sta.WbMsg.Cmd := WB_Wb ;
	Sta.WbMsg.Proc := Other ;
	Sta.WbMsg.HomeProc := false;
-- Auxiliary invariants used by PI_Remote_PutX71: 12
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false']


[Rulename]: PI_Remote_GetX80
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_I', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule PI_Remote_GetX80 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: PI_Remote_Get84
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_I', 'Sta.Proc[NODE_1].ProcCmd = NODE_None'}
Strengthening 1 time, find 0 predicates

include 1 abstract type

Rule PI_Remote_Get84 has 1 parameter.
action part is empty
string_list:[]


[Rulename]: Store_Home85
guard:{'Sta.HomeProc.CacheState = CACHE_E'}
Strengthening 1 time, find 0 predicates

include 0 abstract type

Rule Store_Home85 has no parameter.
string_list:[]


[Rulename]: Store86
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 12 predicates

include 1 abstract type

Rule Store86 has 1 parameter.

Print abstract rule of Store86, abstract NODE_1
para_dcit:{'DATA_1': 'DATA', 'NODE_1': 'NODE'}
action:
	Sta.CurrData := DATA_1;
-- Auxiliary invariants used by Store86: 12
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false']
checking ./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m

checking invariants...
original_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m
num core = 1, type = <class 'int'>
ranges [(0, 107)]
start:0,end:1
original_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m
new_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m
[call murphi]compile murphi to cpp....
command1 = /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/src/mu ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m
command2 = g++ -ggdb -o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.cpp -I /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/include -lm
command3 = ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.o -m1000 -finderrors -ndl -m100
compile murphi file to cpp....
Wrong ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:169: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:200: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:232: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:584: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:623: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:666: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:707: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:748: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:792: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:839: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:885: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:932: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:976: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1021: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1066: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1110: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1146: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1182: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1218: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1248: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1278: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1308: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1525: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1741: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1776: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1844: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:1880: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2043: warning: Scalarset is used in loop index.
	Please make sure that the iterations are independent.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2099:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2128:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2164:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2196:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2272:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2385:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2479:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2484:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2485:NODE_2 undeclared.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2485:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2485:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2485:Arguments of &, |, -> must be boolean.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2489:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2494:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2494:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2495:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2502:Type of target of assignment doesn't match type of source.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2505:Ruleset declaration shadows enclosing Ruleset or Alias.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2507:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2516:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2516:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2516:Type of target of assignment doesn't match type of source.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2517:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2517:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2517:Type of target of assignment doesn't match type of source.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2518:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2526:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2532:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2543:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2543:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2552:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2558:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2568:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2579:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2579:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2588:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2591:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2598:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2609:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2614:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2623:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2626:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2631:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2642:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2647:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2656:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2659:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2664:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2675:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2680:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2689:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2694:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2695:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2695:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2695:Arguments of &, |, -> must be boolean.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2699:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2705:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2705:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2706:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2707:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2723:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2732:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2732:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2732:Type of target of assignment doesn't match type of source.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2733:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2733:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2733:Type of target of assignment doesn't match type of source.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2736:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2744:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2751:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2762:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2767:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2778:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2784:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2795:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2806:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2811:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2822:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2827:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2828:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2828:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2828:Arguments of &, |, -> must be boolean.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2832:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2838:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2838:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2839:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2840:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2856:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2865:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2865:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2865:Type of target of assignment doesn't match type of source.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2866:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2866:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2866:Type of target of assignment doesn't match type of source.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2868:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2876:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2883:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2894:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2899:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2909:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2915:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2926:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2937:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2942:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2952:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2955:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2963:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2974:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2979:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2990:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:2993:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3001:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3012:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3017:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3027:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3030:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3036:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3047:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3052:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3063:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3066:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3072:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3083:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3088:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3099:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3102:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3108:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3119:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3124:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3134:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3137:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3143:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3154:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3159:syntax error. Last token read was ')'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3169:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3172:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3179:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3182:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3199:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3207:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3210:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3227:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3235:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3238:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3256:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3260:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3277:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3282:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3299:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3304:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3322:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3326:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3332:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3336:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3354:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3372:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3380:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3381:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3381:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3381:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3382:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3382:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3382:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3383:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3383:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3384:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3386:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3386:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3386:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3388:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3389:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3389:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3389:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3394:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3394:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3397:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3397:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3397:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3398:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3398:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3398:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3399:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3400:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3400:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3415:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3417:NODE_1 undeclared.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3417:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3417:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3417:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3418:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3418:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3418:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3421:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3421:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3422:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3422:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3423:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3423:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3423:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3425:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3425:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3425:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3426:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3426:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3426:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3435:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3447:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3473:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3481:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3484:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3493:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3494:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3494:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3494:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3495:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3495:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3495:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3496:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3496:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3497:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3499:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3504:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3519:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3521:NODE_1 undeclared.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3521:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3521:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3521:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3522:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3522:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3522:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3523:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3523:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3525:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3525:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3527:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3527:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3527:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3529:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3529:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3529:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3531:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3531:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3531:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3536:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3546:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3563:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3569:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3573:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3584:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3587:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3595:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3598:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3602:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3607:syntax error. Last token read was 'endrule'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3610:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3614:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3620:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3624:syntax error. Last token read was '==>'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3651:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3654:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3654:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3654:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3656:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3656:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3660:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3660:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3660:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3661:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3661:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3661:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3662:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3663:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3663:syntax error. Last token read was 'end'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3683:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3686:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3686:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3686:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3688:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3688:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3692:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3692:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3692:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3693:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3693:Not a record type.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3693:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3694:Wrong index type for array reference.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3695:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3695:syntax error. Last token read was 'end'
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3706:Arguments of = or <> must have same types.
./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m:3706:syntax error. Last token read was ')'

Traceback (most recent call last):
  File "main.py", line 530, in <module>
    sys.exit(main(sys.argv[1:]))
  File "main.py", line 518, in main
    all(data_dir, args, murphi_url, recalculate=args.recalculate == 'y')
  File "main.py", line 474, in all
    cmp(data_dir, args, all_types, aux_invs, abs_filename, prot_analyzer)
  File "main.py", line 297, in cmp
    counterex_index = checker.check_usedF(used_inv_string_list, 1, abs_filename,
  File "/home/lyj238/protocol/project/association_rule_learning/select_invs.py", line 219, in check_usedF
    spurious_cnt, counterex_index = self.select_invariant(test_rule_string, keep_file=keep_file, num_core=num_core,
  File "/home/lyj238/protocol/project/association_rule_learning/select_invs.py", line 57, in select_invariant
    spurious_index.extend(self.parallel(len(jobs), 1, translate_dic, original_file, keep_file, aux_para))
  File "/home/lyj238/protocol/project/association_rule_learning/select_invs.py", line 102, in parallel
    counter_ex_list = run_murphi_all(self.data_dir, self.name, 'ABS_{0}_{1}'.format(self.name, id), self.murphi_dir, aux_para)
  File "/home/lyj238/protocol/project/murphi_analysis/call_murphi.py", line 84, in run_murphi_all
    raise ValueError
ValueError
