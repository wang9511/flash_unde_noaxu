Namespace(abs_obj='NODE', all=True, cmp=False, confidence=1.0, iter=2, kmax=3, learn=False, node_num=2, outputfile=None, preprocess=False, protocol='flash_unde_noaux', recalculate='n', srcfile=None, support=0.0)
******************************
Preprocessing
typedef:
self.atoms:
collect atoms from NI_Replace3
self.atoms:
collect atoms from NI_Replace4
self.atoms:
collect atoms from NI_InvAck_311
self.atoms:
collect atoms from NI_InvAck_212
self.atoms:
collect atoms from NI_InvAck_113
self.atoms:
collect atoms from NI_InvAck_exists14
self.atoms:
collect atoms from NI_InvAck_exists_Home15
self.atoms:
collect atoms from NI_Inv16
self.atoms:
collect atoms from NI_Inv17
self.atoms:
collect atoms from NI_Remote_PutX18
self.atoms:
collect atoms from NI_Remote_Put20
self.atoms:
collect atoms from NI_Remote_Put21
self.atoms:
collect atoms from NI_Remote_GetX_PutX_Home24
self.atoms:
collect atoms from NI_Remote_GetX_PutX25
self.atoms:
collect atoms from NI_Remote_GetX_Nak_Home26
self.atoms:
collect atoms from NI_Remote_GetX_Nak27
self.atoms:
collect atoms from NI_Local_GetX_PutX_1128
self.atoms:
collect atoms from NI_Local_GetX_PutX_1029
self.atoms:
collect atoms from NI_Local_GetX_PutX_10_Home30
self.atoms:
collect atoms from NI_Local_GetX_PutX_931
self.atoms:
collect atoms from NI_Local_GetX_PutX_932
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_NODE_Get33
self.atoms:
collect atoms from NI_Local_GetX_PutX_834
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_Home_NODE_Get35
self.atoms:
collect atoms from NI_Local_GetX_PutX_8_Home36
self.atoms:
collect atoms from NI_Local_GetX_PutX_7_NODE_Get37
self.atoms:
collect atoms from NI_Local_GetX_PutX_7_NODE_Get38
self.atoms:
collect atoms from NI_Local_GetX_PutX_739
self.atoms:
collect atoms from NI_Local_GetX_PutX_740
self.atoms:
collect atoms from NI_Local_GetX_PutX_641
self.atoms:
collect atoms from NI_Local_GetX_PutX_542
self.atoms:
collect atoms from NI_Local_GetX_PutX_443
self.atoms:
collect atoms from NI_Local_GetX_PutX_344
self.atoms:
collect atoms from NI_Local_GetX_PutX_245
self.atoms:
collect atoms from NI_Local_GetX_PutX_146
self.atoms:
collect atoms from NI_Local_GetX_GetX47
self.atoms:
collect atoms from NI_Local_GetX_GetX48
self.atoms:
collect atoms from NI_Local_GetX_Nak49
self.atoms:
collect atoms from NI_Local_GetX_Nak50
self.atoms:
collect atoms from NI_Local_GetX_Nak51
self.atoms:
collect atoms from NI_Remote_Get_Put_Home52
self.atoms:
collect atoms from NI_Remote_Get_Put53
self.atoms:
collect atoms from NI_Remote_Get_Nak_Home54
self.atoms:
collect atoms from NI_Remote_Get_Nak55
self.atoms:
collect atoms from NI_Local_Get_Put_Dirty56
self.atoms:
collect atoms from NI_Local_Get_Put57
self.atoms:
collect atoms from NI_Local_Get_Put_Head58
self.atoms:
collect atoms from NI_Local_Get_Get59
self.atoms:
collect atoms from NI_Local_Get_Get60
self.atoms:
collect atoms from NI_Local_Get_Nak61
self.atoms:
collect atoms from NI_Local_Get_Nak62
self.atoms:
collect atoms from NI_Local_Get_Nak63
self.atoms:
collect atoms from NI_Nak66
self.atoms:
collect atoms from PI_Remote_Replace68
self.atoms:
collect atoms from PI_Remote_PutX71
self.atoms:
collect atoms from PI_Remote_GetX80
self.atoms:
collect atoms from PI_Remote_Get84
self.atoms:
collect atoms from Store_Home85
self.atoms:
collect atoms from Store86
Find atomic predicates: 55

all_types:{'NODE': 'NODE_NUM', 'DATA': 'DATA_NUM'}
[({'Sta.UniMsg[NODE_1].Data = Sta.CurrData', 'Sta.UniMsg[NODE_1].Cmd != UNI_Put'}, 'Sta.Dir.ShrVld = false'), ({'Sta.Proc[NODE_2].CacheData = Sta.CurrData', 'Sta.Dir.ShrSet[NODE_2] = true'}, 'Sta.UniMsg[NODE_2].Cmd != UNI_Put')]
******************************
Recheck rules by murphi


[Rulename]: NI_Replace3
guard:{'Sta.RpMsg[NODE_1].Cmd = RP_Replace', 'Sta.Dir.ShrVld'}
Strengthening 1 time, find 7 predicates

include 1 abstract type

Rule NI_Replace3 has 1 parameter.
contentbefore:['Sta.RpMsg[NODE_1].Cmd := RP_None', 'Sta.Dir.ShrSet[NODE_1] := false', 'Sta.Dir.InvSet[NODE_1] := false']
after:['Sta.RpMsg[NODE_1].Cmd := RP_None', 'Sta.Dir.ShrSet[NODE_1] := false', 'Sta.Dir.InvSet[NODE_1] := false']
action part is empty
-- Auxiliary invariants used by NI_Replace3: 4
string_list:['Sta.RpMsg[NODE_1].Cmd = RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Replace4
guard:{'Sta.RpMsg[NODE_1].Cmd = RP_Replace', '!Sta.Dir.ShrVld'}
Strengthening 1 time, find 7 predicates

include 1 abstract type

Rule NI_Replace4 has 1 parameter.
contentbefore:['Sta.RpMsg[NODE_1].Cmd := RP_None']
after:['Sta.RpMsg[NODE_1].Cmd := RP_None']
action part is empty
-- Auxiliary invariants used by NI_Replace4: 4
string_list:['Sta.RpMsg[NODE_1].Cmd = RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd = RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_InvAck_311
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'NODE_2 = NODE_1 | Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.Pending = true', 'Sta.Dir.InvSet[NODE_1] = true'}
Strengthening 1 time, find 35 predicates

include 1 abstract type

Rule NI_InvAck_311 has 1 parameter.
contentbefore:['Sta.InvMsg[NODE_1].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_1] := false', 'Sta.Dir.Pending := false']
after:['Sta.InvMsg[NODE_1].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_1] := false', 'Sta.Dir.Pending := false']

Print abstract rule of NI_InvAck_311, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := false']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13f130>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := false']
action:
	Sta.Dir.Pending := false;
-- Auxiliary invariants used by NI_InvAck_311: 37
string_list:['Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Dirty = true -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.MemData = Sta.CurrData', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Pending = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.ShrVld = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Dirty = true -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Dirty = false']


[Rulename]: NI_InvAck_212
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Local = false', 'Sta.Dir.Pending = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true'}
Strengthening 1 time, find 37 predicates

include 1 abstract type

Rule NI_InvAck_212 has 1 parameter.
contentbefore:['Sta.InvMsg[NODE_1].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_1] := false', 'Sta.Dir.Pending := false']
after:['Sta.InvMsg[NODE_1].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_1] := false', 'Sta.Dir.Pending := false']

Print abstract rule of NI_InvAck_212, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := false']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13f220>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := false']
action:
	Sta.Dir.Pending := false;
-- Auxiliary invariants used by NI_InvAck_212: 40
string_list:['Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.Dir.ShrVld = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.MemData = Sta.CurrData', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Pending = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.ShrVld = true', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.MemData = Sta.CurrData', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.Dir.HeadVld = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.Dir.Pending = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Local = false -> Sta.Dir.Dirty = false', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Dirty = false']


[Rulename]: NI_InvAck_113
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.HomeInvSet = false', 'Sta.Dir.Pending = true', 'Sta.Dir.Local = true', 'NODE_2 = NODE_1 |\n    Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.Dir.Dirty = false'}
Strengthening 1 time, find 35 predicates

include 1 abstract type

Rule NI_InvAck_113 has 1 parameter.
contentbefore:['Sta.InvMsg[NODE_1].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_1] := false', 'Sta.Dir.Pending := false', 'Sta.Dir.Local := false']
after:['Sta.InvMsg[NODE_1].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_1] := false', 'Sta.Dir.Pending := false', 'Sta.Dir.Local := false']

Print abstract rule of NI_InvAck_113, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := false', 'Sta.Dir.Local := false']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13fca0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := false', 'Sta.Dir.Local := false']
action:
	Sta.Dir.Pending := false ;
	Sta.Dir.Local := false;
-- Auxiliary invariants used by NI_InvAck_113: 32
string_list:['Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.MemData = Sta.CurrData', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Pending = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.ShrVld = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = true', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Proc[NODE_2].CacheState != CACHE_E']


[Rulename]: NI_InvAck_exists14
guard:{'Sta.Dir.InvSet[NODE_2] = true', 'Sta.Dir.InvSet[NODE_1]', 'Sta.Dir.Pending = true', 'NODE_1 != NODE_2', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck'}
Strengthening 1 time, find 35 predicates

include 2 abstract type

Rule NI_InvAck_exists14 has 2 parameter.
contentbefore:['Sta.InvMsg[NODE_2].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_2] := false']
after:['Sta.InvMsg[NODE_2].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_2] := false']

Print abstract rule of NI_InvAck_exists14, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
para:NODE_2
22222222222222222222222222






content:['Sta.InvMsg[NODE_2].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_2] := false']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13f9d0>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.InvMsg[NODE_2].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_2] := false']
action:
	Sta.InvMsg[NODE_2].Cmd := INV_None ;
	Sta.Dir.InvSet[NODE_2] := false;
contentbefore:['Sta.InvMsg[NODE_2].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_2] := false']
after:['Sta.InvMsg[NODE_2].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_2] := false']
action part is empty
contentbefore:[]
after:[]
action part is empty
-- Auxiliary invariants used by NI_InvAck_exists14: 35
string_list:['Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Dir.Dirty = false', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Dir.HeadPtr != NODE_1', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.UniMsg[NODE_1].Cmd != UNI_PutX', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Dir.ShrVld = true', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.UniMsg[NODE_1].Proc != NODE_2', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Dir.InvSet[NODE_2] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Dir.InvSet[NODE_2] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_1', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.UniMsg[NODE_1].Cmd != UNI_PutX', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Dir.HeadPtr = NODE_2', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Dir.Pending = false', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.Dir.HeadVld = true', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.MemData = Sta.CurrData', 'Sta.InvMsg[NODE_2].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_2] = true -> Sta.InvMsg[NODE_1].Cmd != INV_Inv']


[Rulename]: NI_InvAck_exists_Home15
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_InvAck', 'Sta.Dir.InvSet[NODE_1] = true', 'Sta.Dir.HomeInvSet', 'Sta.Dir.Pending = true'}
Strengthening 1 time, find 35 predicates

include 1 abstract type

Rule NI_InvAck_exists_Home15 has 1 parameter.
contentbefore:['Sta.InvMsg[NODE_1].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_1] := false']
after:['Sta.InvMsg[NODE_1].Cmd := INV_None', 'Sta.Dir.InvSet[NODE_1] := false']
action part is empty
-- Auxiliary invariants used by NI_InvAck_exists_Home15: 35
string_list:['Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.MemData = Sta.CurrData', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Pending = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.ShrVld = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.HeadVld = true', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.HeadVld = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_InvAck -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Dir.InvSet[NODE_1] = true & Sta.Dir.Pending = true -> Sta.Dir.Local = true', 'Sta.Dir.InvSet[NODE_1] = true -> Sta.Dir.Dirty = false']


[Rulename]: NI_Inv16
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd = NODE_Get'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Inv16 has 1 parameter.
contentbefore:['Sta.InvMsg[NODE_1].Cmd := INV_InvAck', 'Sta.Proc[NODE_1].CacheState := CACHE_I', 'undefine Sta.Proc[NODE_1].CacheData', 'Sta.Proc[NODE_1].InvMarked := true']
after:['Sta.InvMsg[NODE_1].Cmd := INV_InvAck', 'Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.Proc[NODE_1].InvMarked := true']
action part is empty
-- Auxiliary invariants used by NI_Inv16: 20
string_list:['Sta.Proc[NODE_1].ProcCmd = NODE_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].ProcCmd = NODE_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].ProcCmd = NODE_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Local = true', 'Sta.Proc[NODE_1].ProcCmd = NODE_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Pending = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr = NODE_1']


[Rulename]: NI_Inv17
guard:{'Sta.InvMsg[NODE_1].Cmd = INV_Inv', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Inv17 has 1 parameter.
contentbefore:['Sta.InvMsg[NODE_1].Cmd := INV_InvAck', 'Sta.Proc[NODE_1].CacheState := CACHE_I', 'undefine Sta.Proc[NODE_1].CacheData']
after:['Sta.InvMsg[NODE_1].Cmd := INV_InvAck', 'Sta.Proc[NODE_1].CacheState := CACHE_I']
action part is empty
-- Auxiliary invariants used by NI_Inv17: 20
string_list:['Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Local = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.Pending = true', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.ShrVld = false', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd != NODE_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.InvMsg[NODE_1].Cmd = INV_Inv -> Sta.Dir.HeadPtr = NODE_1']


[Rulename]: NI_Remote_PutX18
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_PutX', 'Sta.Proc[NODE_1].ProcCmd = NODE_GetX'}
Strengthening 1 time, find 42 predicates

include 1 abstract type

Rule NI_Remote_PutX18 has 1 parameter.
stmt:Sta.Proc[NODE_1].CacheData := Sta.UniMsg[NODE_1].Data,assign:Sta.UniMsg[NODE_1].Data,rep_dict[assign]:Sta.CurrData
stmt:Sta.Proc[NODE_1].CacheData := Sta.CurrData
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_None', 'Sta.UniMsg[NODE_1].HomeProc := false', 'Sta.Proc[NODE_1].ProcCmd := NODE_None', 'Sta.Proc[NODE_1].InvMarked := false', 'Sta.Proc[NODE_1].CacheState := CACHE_E', 'Sta.Proc[NODE_1].CacheData := Sta.UniMsg[NODE_1].Data', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_None', 'Sta.UniMsg[NODE_1].HomeProc := false', 'Sta.Proc[NODE_1].ProcCmd := NODE_None', 'Sta.Proc[NODE_1].InvMarked := false', 'Sta.Proc[NODE_1].CacheState := CACHE_E', 'Sta.Proc[NODE_1].CacheData := Sta.CurrData']
action part is empty
-- Auxiliary invariants used by NI_Remote_PutX18: 31
string_list:['Sta.Proc[NODE_1].ProcCmd = NODE_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.ShWbMsg.Proc != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Proc[NODE_2].CacheState != CACHE_S', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd = NODE_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.ShWbMsg.Proc = NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Proc[NODE_2].InvMarked = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].ProcCmd = NODE_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.UniMsg[NODE_2].Cmd != UNI_Put', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.ShWbMsg.Cmd = SHWB_FAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].ProcCmd = NODE_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Proc[NODE_2].CacheState = CACHE_I', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_PutX -> Sta.Dir.HeadVld = true']


[Rulename]: NI_Remote_Put20
guard:{'Sta.Proc[NODE_1].InvMarked', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put'}
Strengthening 1 time, find 18 predicates

include 1 abstract type

Rule NI_Remote_Put20 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_None', 'Sta.UniMsg[NODE_1].HomeProc := false', 'Sta.Proc[NODE_1].ProcCmd := NODE_None', 'Sta.Proc[NODE_1].InvMarked := false', 'Sta.Proc[NODE_1].CacheState := CACHE_I', 'undefine Sta.Proc[NODE_1].CacheData', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_None', 'Sta.UniMsg[NODE_1].HomeProc := false', 'Sta.Proc[NODE_1].ProcCmd := NODE_None', 'Sta.Proc[NODE_1].InvMarked := false', 'Sta.Proc[NODE_1].CacheState := CACHE_I']
action part is empty
-- Auxiliary invariants used by NI_Remote_Put20: 9
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.Proc[NODE_2].CacheState != CACHE_E']


[Rulename]: NI_Remote_Put21
guard:{'!Sta.Proc[NODE_1].InvMarked', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put'}
Strengthening 1 time, find 18 predicates

include 1 abstract type

Rule NI_Remote_Put21 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_None', 'Sta.UniMsg[NODE_1].HomeProc := false', 'Sta.Proc[NODE_1].ProcCmd := NODE_None', 'Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.Proc[NODE_1].CacheData := Sta.UniMsg[NODE_1].Data', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_None', 'Sta.UniMsg[NODE_1].HomeProc := false', 'Sta.Proc[NODE_1].ProcCmd := NODE_None', 'Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.Proc[NODE_1].CacheData := Sta.UniMsg[NODE_1].Data']
action part is empty
-- Auxiliary invariants used by NI_Remote_Put21: 9
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Put -> Sta.Proc[NODE_2].CacheState != CACHE_E']


[Rulename]: NI_Remote_GetX_PutX_Home24
guard:{'Sta.HomeUniMsg.HomeProc = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.HomeUniMsg.Cmd = UNI_GetX', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 42 predicates

include 1 abstract type

Rule NI_Remote_GetX_PutX_Home24 has 1 parameter.
stmt:Sta.HomeUniMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.HomeUniMsg.Data := Sta.CurrData
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.HomeUniMsg.Cmd := UNI_PutX', 'Sta.HomeUniMsg.Data := Sta.Proc[NODE_1].CacheData', 'undefine Sta.Proc[NODE_1].CacheData']
after:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.HomeUniMsg.Cmd := UNI_PutX', 'Sta.HomeUniMsg.Data := Sta.CurrData']

Print abstract rule of NI_Remote_GetX_PutX_Home24, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.HomeUniMsg.Cmd := UNI_PutX', 'Sta.HomeUniMsg.Data := Sta.CurrData']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13fca0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.HomeUniMsg.Cmd := UNI_PutX', 'Sta.HomeUniMsg.Data := Sta.CurrData']
action:
	Sta.HomeUniMsg.Cmd := UNI_PutX ;
	Sta.HomeUniMsg.Data := Sta.CurrData;
-- Auxiliary invariants used by NI_Remote_GetX_PutX_Home24: 27
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].InvMarked = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd = SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_S', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState = CACHE_I', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb']


[Rulename]: NI_Remote_GetX_PutX25
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 52 predicates

include 2 abstract type

Rule NI_Remote_GetX_PutX25 has 2 parameter.
stmt:Sta.UniMsg[NODE_2].Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.UniMsg[NODE_2].Data := Sta.CurrData
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.Proc[NODE_1].CacheData', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'undefine Sta.ShWbMsg.Data', 'undefine Sta.Proc[NODE_1].CacheData']
after:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false']

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
para:NODE_2
22222222222222222222222222






content:['Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13fdf0>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false']
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.CurrData ;
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false;
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false']
after:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false']

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
para:NODE_1
22222222222222222222222222






content:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := Other', 'Sta.ShWbMsg.HomeProc := false']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13fdf0>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := Other', 'Sta.ShWbMsg.HomeProc := false']
action:
	Sta.Proc[NODE_1].CacheState := CACHE_I ;
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false']
after:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false']

Print abstract rule of NI_Remote_GetX_PutX25, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := Other', 'Sta.ShWbMsg.HomeProc := false']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13fdf0>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.ShWbMsg.Cmd := SHWB_FAck', 'Sta.ShWbMsg.Proc := Other', 'Sta.ShWbMsg.HomeProc := false']
action:
	Sta.ShWbMsg.Cmd := SHWB_FAck ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false;
-- Auxiliary invariants used by NI_Remote_GetX_PutX25: 63
string_list:['Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].InvMarked = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd = SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.Dirty = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc = NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_S', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Proc != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.MemData = Sta.CurrData', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Proc[NODE_1].CacheState = CACHE_I', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_1].Proc != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState = CACHE_I', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Proc[NODE_1].InvMarked = false']


[Rulename]: NI_Remote_GetX_Nak_Home26
guard:{'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Cmd = UNI_GetX', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 6 predicates

include 1 abstract type

Rule NI_Remote_GetX_Nak_Home26 has 1 parameter.
contentbefore:['Sta.HomeUniMsg.Cmd := UNI_Nak', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
after:['Sta.HomeUniMsg.Cmd := UNI_Nak', 'Sta.NakcMsg.Cmd := NAKC_Nakc']

Print abstract rule of NI_Remote_GetX_Nak_Home26, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.HomeUniMsg.Cmd := UNI_Nak', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d76d0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.HomeUniMsg.Cmd := UNI_Nak', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;
-- Auxiliary invariants used by NI_Remote_GetX_Nak_Home26: 4
string_list:['Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.Dir.HeadPtr != NODE_2']


[Rulename]: NI_Remote_GetX_Nak27
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.UniMsg[NODE_2].Proc = NODE_1'}
Strengthening 1 time, find 35 predicates

include 2 abstract type

Rule NI_Remote_GetX_Nak27 has 2 parameter.
contentbefore:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'undefine Sta.UniMsg[NODE_2].Data', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
after:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
para:NODE_2
22222222222222222222222222






content:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := Other', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7880>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := Other', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;
contentbefore:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
after:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
para:NODE_1
22222222222222222222222222






content:['Sta.NakcMsg.Cmd := NAKC_Nakc']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7880>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.NakcMsg.Cmd := NAKC_Nakc']
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;
contentbefore:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
after:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']

Print abstract rule of NI_Remote_GetX_Nak27, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.NakcMsg.Cmd := NAKC_Nakc']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7880>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.NakcMsg.Cmd := NAKC_Nakc']
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;
-- Auxiliary invariants used by NI_Remote_GetX_Nak27: 39
string_list:['Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.Pending = true', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Proc != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.MemData = Sta.CurrData', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Proc[NODE_1].CacheState = CACHE_I', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_1].Proc != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Proc[NODE_1].InvMarked = false']


[Rulename]: NI_Local_GetX_PutX_1128
guard:{'Sta.HomeProc.CacheState = CACHE_E', 'Sta.Dir.Pending = false', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 26 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_1128 has 1 parameter.
contentbefore:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.HomeProc.CacheData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.HomeProc.CacheData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_1128, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7d60>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_1128: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_1029
guard:{'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadVld', 'Sta.Dir.Dirty = false'}
Strengthening 1 time, find 22 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_1029 has 2 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData']

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
para:NODE_2
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7f10>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData;
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData']

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
para:NODE_1
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7f10>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData']

Print abstract rule of NI_Local_GetX_PutX_1029, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7f10>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other & ((Sta.Dir.ShrVld & Sta.Dir.ShrSet[p]) | ((Sta.Dir.HeadVld & Sta.Dir.HeadPtr = p) & Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
-- Auxiliary invariants used by NI_Local_GetX_PutX_1029: 6
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.HeadPtr = NODE_2 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_10_Home30
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_10_Home30 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']

Print abstract rule of NI_Local_GetX_PutX_10_Home30, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbfed490>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
-- Auxiliary invariants used by NI_Local_GetX_PutX_10_Home30: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_931
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Pending = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 29 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_931 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']

Print abstract rule of NI_Local_GetX_PutX_931, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7d90>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
-- Auxiliary invariants used by NI_Local_GetX_PutX_931: 3
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_932
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HomeHeadPtr = true', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_932 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']

Print abstract rule of NI_Local_GetX_PutX_932, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbfed7c0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None;
-- Auxiliary invariants used by NI_Local_GetX_PutX_932: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_8_NODE_Get33
guard:{'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Local = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadVld', 'Sta.Dir.Dirty = false'}
Strengthening 1 time, find 22 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_8_NODE_Get33 has 2 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData', 'Sta.HomeProc.InvMarked := true']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
para:NODE_2
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbfed970>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
para:NODE_1
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbfed970>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']

Print abstract rule of NI_Local_GetX_PutX_8_NODE_Get33, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbfed970>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
-- Auxiliary invariants used by NI_Local_GetX_PutX_8_NODE_Get33: 7
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Local = true -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.HeadPtr = NODE_2 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_834
guard:{'Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].HomeProc', 'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.Dir.Local = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX', 'Sta.Dir.ShrSet[NODE_1]', 'Sta.Dir.HeadVld', 'Sta.Dir.Dirty = false'}
Strengthening 1 time, find 22 predicates

include 2 abstract type

Rule NI_Local_GetX_PutX_834 has 2 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
para:NODE_2
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbfedeb0>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := NODE_2 ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != NODE_2 &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.UniMsg[NODE_2].Cmd := UNI_PutX ;
	Sta.UniMsg[NODE_2].Data := Sta.MemData ;
	Sta.HomeProc.CacheState := CACHE_I;
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
para:NODE_1
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbfedeb0>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_2', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_2 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_2].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_2].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_834, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbfedeb0>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_834: 7
string_list:['Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Local = true -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.HeadPtr = NODE_2 & Sta.UniMsg[NODE_2].Cmd = UNI_GetX -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_GetX & Sta.Dir.Pending = false -> Sta.UniMsg[NODE_2].Proc != NODE_1']


[Rulename]: NI_Local_GetX_PutX_8_Home_NODE_Get35
guard:{'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home_NODE_Get35 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData', 'Sta.HomeProc.InvMarked := true']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']

Print abstract rule of NI_Local_GetX_PutX_8_Home_NODE_Get35, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffb3d0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
-- Auxiliary invariants used by NI_Local_GetX_PutX_8_Home_NODE_Get35: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_8_Home36
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_8_Home36 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_8_Home36, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc13f280>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_8_Home36: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get37
guard:{'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 29 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get37 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get37, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffb730>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
-- Auxiliary invariants used by NI_Local_GetX_PutX_7_NODE_Get37: 3
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_7_NODE_Get38
guard:{'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.Dir.HomeHeadPtr = true', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_7_NODE_Get38 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']

Print abstract rule of NI_Local_GetX_PutX_7_NODE_Get38, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffb8e0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
-- Auxiliary invariants used by NI_Local_GetX_PutX_7_NODE_Get38: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_739
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Pending = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 29 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_739 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_739, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffba90>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_739: 3
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_740
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_740 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != NODE_1 &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_740, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffbc40>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true', 'Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'if ((p != Other &\n    ((Sta.Dir.ShrVld &\n    Sta.Dir.ShrSet[p]) |\n    ((Sta.Dir.HeadVld &\n    Sta.Dir.HeadPtr = p) &\n    Sta.Dir.HomeHeadPtr = false)))) then\n      Sta.Dir.InvSet[p] := true', 'Sta.InvMsg[p].Cmd := INV_Inv', 'else\n      Sta.Dir.InvSet[p] := false', 'Sta.InvMsg[p].Cmd := INV_None', 'end', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeInvMsg.Cmd := INV_None', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Pending := true ;
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	if ((p != Other &
    ((Sta.Dir.ShrVld &
    Sta.Dir.ShrSet[p]) |
    ((Sta.Dir.HeadVld &
    Sta.Dir.HeadPtr = p) &
    Sta.Dir.HomeHeadPtr = false)))) then
      Sta.Dir.InvSet[p] := true ;
	Sta.InvMsg[p].Cmd := INV_Inv ;
	else
      Sta.Dir.InvSet[p] := false ;
	Sta.InvMsg[p].Cmd := INV_None ;
	end ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeInvMsg.Cmd := INV_None ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_740: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_641
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = false', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_641 has 1 parameter.
contentbefore:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_641, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffbdf0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_641: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_542
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_542 has 1 parameter.
contentbefore:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_542, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffbc70>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_542: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_443
{'src': 'NODE_1', 'p': 'NODE_2'} {'p': 'NODE', 'src': 'NODE'}
guard:{'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Pending = false', 'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.HomeShrSet = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'NODE_2 != NODE_1 ->\n    Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_443 has 1 parameter.
contentbefore:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData', 'Sta.HomeProc.InvMarked := true']
after:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']

Print abstract rule of NI_Local_GetX_PutX_443, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffbf10>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
-- Auxiliary invariants used by NI_Local_GetX_PutX_443: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_344
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HeadVld = false', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_344 has 1 parameter.
contentbefore:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_344, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3d7e50>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_344: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_245
guard:{'Sta.Dir.Pending = false', 'Sta.HomeProc.ProcCmd != NODE_Get', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.Dir.HeadVld = false', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_245 has 1 parameter.
contentbefore:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I']

Print abstract rule of NI_Local_GetX_PutX_245, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07b580>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I']
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I;
-- Auxiliary invariants used by NI_Local_GetX_PutX_245: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_PutX_146
guard:{'Sta.HomeProc.ProcCmd = NODE_Get', 'Sta.Dir.Pending = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.Dir.HeadVld = false', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 27 predicates

include 1 abstract type

Rule NI_Local_GetX_PutX_146 has 1 parameter.
contentbefore:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true', 'undefine Sta.HomeProc.CacheData']
after:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_PutX', 'Sta.UniMsg[NODE_1].Data := Sta.MemData', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']

Print abstract rule of NI_Local_GetX_PutX_146, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07b730>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Local := false', 'Sta.Dir.Dirty := true', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.Dir.ShrVld := false', 'for p : NODE do\n    Sta.Dir.ShrSet[p] := false', 'Sta.Dir.InvSet[p] := false', 'end', 'Sta.Dir.HomeShrSet := false', 'Sta.Dir.HomeInvSet := false', 'Sta.HomeProc.CacheState := CACHE_I', 'Sta.HomeProc.InvMarked := true']
action:
	Sta.Dir.Local := false ;
	Sta.Dir.Dirty := true ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.Dir.ShrVld := false ;
	for p : NODE do
    Sta.Dir.ShrSet[p] := false ;
	Sta.Dir.InvSet[p] := false ;
	end ;
	Sta.Dir.HomeShrSet := false ;
	Sta.Dir.HomeInvSet := false ;
	Sta.HomeProc.CacheState := CACHE_I ;
	Sta.HomeProc.InvMarked := true;
-- Auxiliary invariants used by NI_Local_GetX_PutX_146: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_GetX47
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Pending = false', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 31 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX47 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.UniMsg[NODE_1].Cmd := UNI_GetX', 'Sta.UniMsg[NODE_1].Proc := Sta.Dir.HeadPtr', 'undefine Sta.UniMsg[NODE_1].Data', 'Sta.UniMsg[NODE_1].HomeProc := Sta.Dir.HomeHeadPtr']
after:['Sta.Dir.Pending := true', 'Sta.UniMsg[NODE_1].Cmd := UNI_GetX', 'Sta.UniMsg[NODE_1].Proc := Sta.Dir.HeadPtr', 'Sta.UniMsg[NODE_1].HomeProc := Sta.Dir.HomeHeadPtr']

Print abstract rule of NI_Local_GetX_GetX47, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07b8e0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true']
action:
	Sta.Dir.Pending := true;
-- Auxiliary invariants used by NI_Local_GetX_GetX47: 3
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_GetX48
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 28 predicates

include 1 abstract type

Rule NI_Local_GetX_GetX48 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.UniMsg[NODE_1].Cmd := UNI_GetX', 'Sta.UniMsg[NODE_1].Proc := Sta.Dir.HeadPtr', 'undefine Sta.UniMsg[NODE_1].Data', 'Sta.UniMsg[NODE_1].HomeProc := Sta.Dir.HomeHeadPtr']
after:['Sta.Dir.Pending := true', 'Sta.UniMsg[NODE_1].Cmd := UNI_GetX', 'Sta.UniMsg[NODE_1].Proc := Sta.Dir.HeadPtr', 'Sta.UniMsg[NODE_1].HomeProc := Sta.Dir.HomeHeadPtr']

Print abstract rule of NI_Local_GetX_GetX48, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07ba90>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true']
action:
	Sta.Dir.Pending := true;
-- Auxiliary invariants used by NI_Local_GetX_GetX48: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_Nak49
guard:{'Sta.UniMsg[NODE_1].HomeProc', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Pending = true'}
Strengthening 1 time, find 18 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak49 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true']
action part is empty
-- Auxiliary invariants used by NI_Local_GetX_Nak49: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_Nak50
guard:{'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = true', 'Sta.HomeProc.CacheState != CACHE_E', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 26 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak50 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true']
action part is empty
-- Auxiliary invariants used by NI_Local_GetX_Nak50: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_GetX_Nak51
guard:{'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX', 'Sta.Dir.Local = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].HomeProc'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_GetX_Nak51 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true']
action part is empty
-- Auxiliary invariants used by NI_Local_GetX_Nak51: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_GetX -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Remote_Get_Put_Home52
guard:{'Sta.HomeUniMsg.HomeProc = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E', 'Sta.HomeUniMsg.Cmd = UNI_Get', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 42 predicates

include 1 abstract type

Rule NI_Remote_Get_Put_Home52 has 1 parameter.
stmt:Sta.HomeUniMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.HomeUniMsg.Data := Sta.CurrData
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.HomeUniMsg.Cmd := UNI_Put', 'Sta.HomeUniMsg.Data := Sta.Proc[NODE_1].CacheData']
after:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.HomeUniMsg.Cmd := UNI_Put', 'Sta.HomeUniMsg.Data := Sta.CurrData']

Print abstract rule of NI_Remote_Get_Put_Home52, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.HomeUniMsg.Cmd := UNI_Put', 'Sta.HomeUniMsg.Data := Sta.CurrData']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07ba90>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.HomeUniMsg.Cmd := UNI_Put', 'Sta.HomeUniMsg.Data := Sta.CurrData']
action:
	Sta.HomeUniMsg.Cmd := UNI_Put ;
	Sta.HomeUniMsg.Data := Sta.CurrData;
-- Auxiliary invariants used by NI_Remote_Get_Put_Home52: 27
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].InvMarked = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd = SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_S', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState = CACHE_I', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb']


[Rulename]: NI_Remote_Get_Put53
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 53 predicates

include 2 abstract type

Rule NI_Remote_Get_Put53 has 2 parameter.
stmt:Sta.UniMsg[NODE_2].Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.UniMsg[NODE_2].Data := Sta.CurrData
stmt:Sta.ShWbMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.ShWbMsg.Data := Sta.CurrData
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.UniMsg[NODE_2].Cmd := UNI_Put', 'Sta.UniMsg[NODE_2].Data := Sta.Proc[NODE_1].CacheData', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.Proc[NODE_1].CacheData']
after:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.UniMsg[NODE_2].Cmd := UNI_Put', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
para:NODE_2
22222222222222222222222222






content:['Sta.UniMsg[NODE_2].Cmd := UNI_Put', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07be50>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.UniMsg[NODE_2].Cmd := UNI_Put', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Put ;
	Sta.UniMsg[NODE_2].Data := Sta.CurrData ;
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := NODE_2 ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.UniMsg[NODE_2].Cmd := UNI_Put', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']
after:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.UniMsg[NODE_2].Cmd := UNI_Put', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
para:NODE_1
22222222222222222222222222






content:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := Other', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07be50>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := Other', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']
action:
	Sta.Proc[NODE_1].CacheState := CACHE_S ;
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.UniMsg[NODE_2].Cmd := UNI_Put', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']
after:['Sta.Proc[NODE_1].CacheState := CACHE_S', 'Sta.UniMsg[NODE_2].Cmd := UNI_Put', 'Sta.UniMsg[NODE_2].Data := Sta.CurrData', 'Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := NODE_2', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']

Print abstract rule of NI_Remote_Get_Put53, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := Other', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07be50>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.ShWbMsg.Cmd := SHWB_ShWb', 'Sta.ShWbMsg.Proc := Other', 'Sta.ShWbMsg.HomeProc := false', 'Sta.ShWbMsg.Data := Sta.CurrData']
action:
	Sta.ShWbMsg.Cmd := SHWB_ShWb ;
	Sta.ShWbMsg.Proc := Other ;
	Sta.ShWbMsg.HomeProc := false ;
	Sta.ShWbMsg.Data := Sta.CurrData;
-- Auxiliary invariants used by NI_Remote_Get_Put53: 63
string_list:['Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].InvMarked = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd = SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Proc[NODE_1].CacheState = CACHE_I', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_2', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_S', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.MemData = Sta.CurrData', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Proc != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.HeadVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.UniMsg[NODE_1].Proc != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState = CACHE_I', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.Pending = true']


[Rulename]: NI_Remote_Get_Nak_Home54
guard:{'Sta.HomeUniMsg.HomeProc = false', 'Sta.HomeUniMsg.Cmd = UNI_Get', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.HomeUniMsg.Proc = NODE_1'}
Strengthening 1 time, find 6 predicates

include 1 abstract type

Rule NI_Remote_Get_Nak_Home54 has 1 parameter.
contentbefore:['Sta.HomeUniMsg.Cmd := UNI_Nak', 'Sta.NakcMsg.Cmd := NAKC_Nakc', 'undefine Sta.HomeUniMsg.Data', 'undefine Sta.HomeUniMsg.Proc']
after:['Sta.HomeUniMsg.Cmd := UNI_Nak', 'Sta.NakcMsg.Cmd := NAKC_Nakc']

Print abstract rule of NI_Remote_Get_Nak_Home54, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.HomeUniMsg.Cmd := UNI_Nak', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3cf340>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.HomeUniMsg.Cmd := UNI_Nak', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
action:
	Sta.HomeUniMsg.Cmd := UNI_Nak ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;
-- Auxiliary invariants used by NI_Remote_Get_Nak_Home54: 4
string_list:['Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.Dir.HeadPtr != NODE_2']


[Rulename]: NI_Remote_Get_Nak55
guard:{'NODE_2 != NODE_1', 'Sta.UniMsg[NODE_2].HomeProc = false', 'Sta.Proc[NODE_1].CacheState != CACHE_E', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get', 'Sta.UniMsg[NODE_2].Proc = NODE_1'}
Strengthening 1 time, find 35 predicates

include 2 abstract type

Rule NI_Remote_Get_Nak55 has 2 parameter.
contentbefore:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'undefine Sta.UniMsg[NODE_2].Data', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
after:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
para:NODE_2
22222222222222222222222222






content:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := Other', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffbd30>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := Other', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
action:
	Sta.UniMsg[NODE_2].Cmd := UNI_Nak ;
	Sta.UniMsg[NODE_2].Proc := Other ;
	Sta.UniMsg[NODE_2].HomeProc := false ;
	Sta.NakcMsg.Cmd := NAKC_Nakc;
contentbefore:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
after:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
para:NODE_1
22222222222222222222222222






content:['Sta.NakcMsg.Cmd := NAKC_Nakc']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffbd30>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.NakcMsg.Cmd := NAKC_Nakc']
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;
contentbefore:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']
after:['Sta.UniMsg[NODE_2].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_2].Proc := NODE_1', 'Sta.UniMsg[NODE_2].HomeProc := false', 'Sta.NakcMsg.Cmd := NAKC_Nakc']

Print abstract rule of NI_Remote_Get_Nak55, abstract NODE_1,NODE_2
para_dcit:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.NakcMsg.Cmd := NAKC_Nakc']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecbffbd30>
para_list:{'NODE_2', 'NODE_1'}
22222222222222222222222222






content:['Sta.NakcMsg.Cmd := NAKC_Nakc']
action:
	Sta.NakcMsg.Cmd := NAKC_Nakc;
-- Auxiliary invariants used by NI_Remote_Get_Nak55: 39
string_list:['Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.UniMsg[NODE_1].Cmd != UNI_Put', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.Local = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Proc[NODE_1].CacheState = CACHE_I', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Proc[NODE_1].InvMarked = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.InvMsg[NODE_1].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.UniMsg[NODE_1].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.MemData = Sta.CurrData', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Proc[NODE_1].CacheState != CACHE_S', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.InvSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Proc != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.HeadVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.InvMsg[NODE_1].Cmd != INV_Inv', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.UniMsg[NODE_1].Proc != NODE_2', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrVld = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_2].Proc = NODE_1 -> Sta.Dir.ShrSet[NODE_1] = false', 'Sta.Proc[NODE_1].CacheState != CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_2].Proc = NODE_1 & Sta.UniMsg[NODE_2].Cmd = UNI_Get -> Sta.Dir.Pending = true']


[Rulename]: NI_Local_Get_Put_Dirty56
guard:{'Sta.HomeProc.CacheState = CACHE_E', 'Sta.Dir.Pending = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace'}
Strengthening 1 time, find 25 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Dirty56 has 1 parameter.
contentbefore:['Sta.Dir.Dirty := false', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.MemData := Sta.HomeProc.CacheData', 'Sta.HomeProc.CacheState := CACHE_S', 'Sta.UniMsg[NODE_1].Cmd := UNI_Put', 'Sta.UniMsg[NODE_1].Data := Sta.HomeProc.CacheData']
after:['Sta.Dir.Dirty := false', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.MemData := Sta.HomeProc.CacheData', 'Sta.HomeProc.CacheState := CACHE_S', 'Sta.UniMsg[NODE_1].Cmd := UNI_Put', 'Sta.UniMsg[NODE_1].Data := Sta.HomeProc.CacheData']

Print abstract rule of NI_Local_Get_Put_Dirty56, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Dirty := false', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.MemData := Sta.HomeProc.CacheData', 'Sta.HomeProc.CacheState := CACHE_S']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3cfa00>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Dirty := false', 'Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false', 'Sta.MemData := Sta.HomeProc.CacheData', 'Sta.HomeProc.CacheState := CACHE_S']
action:
	Sta.Dir.Dirty := false ;
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false ;
	Sta.MemData := Sta.HomeProc.CacheData ;
	Sta.HomeProc.CacheState := CACHE_S;
-- Auxiliary invariants used by NI_Local_Get_Put_Dirty56: 8
string_list:['Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_Get_Put57
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.HeadVld = false', 'Sta.Dir.Dirty = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace'}
Strengthening 1 time, find 26 predicates

include 1 abstract type

Rule NI_Local_Get_Put57 has 1 parameter.
contentbefore:['Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_Put', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']
after:['Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := NODE_1', 'Sta.Dir.HomeHeadPtr := false', 'Sta.UniMsg[NODE_1].Cmd := UNI_Put', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']

Print abstract rule of NI_Local_Get_Put57, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3cfbb0>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.HeadVld := true', 'Sta.Dir.HeadPtr := Other', 'Sta.Dir.HomeHeadPtr := false']
action:
	Sta.Dir.HeadVld := true ;
	Sta.Dir.HeadPtr := Other ;
	Sta.Dir.HomeHeadPtr := false;
-- Auxiliary invariants used by NI_Local_Get_Put57: 8
string_list:['Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_Get_Put_Head58
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.Dirty = false', 'Sta.Dir.HeadVld', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_Get_Put_Head58 has 1 parameter.
contentbefore:['Sta.Dir.ShrVld := true', 'Sta.Dir.ShrSet[NODE_1] := true', 'for p : NODE do\n    if (p = NODE_1) then\n      Sta.Dir.InvSet[p] := true', 'else\n      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p]', 'end', 'end', 'Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet', 'Sta.UniMsg[NODE_1].Cmd := UNI_Put', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']
after:['Sta.Dir.ShrVld := true', 'Sta.Dir.ShrSet[NODE_1] := true', 'for p : NODE do\n    if (p = NODE_1) then\n      Sta.Dir.InvSet[p] := true', 'else\n      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p]', 'end', 'end', 'Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet', 'Sta.UniMsg[NODE_1].Cmd := UNI_Put', 'Sta.UniMsg[NODE_1].Data := Sta.MemData']

Print abstract rule of NI_Local_Get_Put_Head58, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_1': 'NODE', 'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.ShrVld := true', 'for p : NODE do\n    if (p = Other) then\n      Sta.Dir.InvSet[p] := true', 'else\n      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p]', 'end', 'end', 'Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3cfd60>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.ShrVld := true', 'for p : NODE do\n    if (p = Other) then\n      Sta.Dir.InvSet[p] := true', 'else\n      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p]', 'end', 'end', 'Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet']
action:
	Sta.Dir.ShrVld := true ;
	for p : NODE do
    if (p = Other) then
      Sta.Dir.InvSet[p] := true ;
	else
      Sta.Dir.InvSet[p] := Sta.Dir.ShrSet[p] ;
	end ;
	end ;
	Sta.Dir.HomeInvSet := Sta.Dir.HomeShrSet;
-- Auxiliary invariants used by NI_Local_Get_Put_Head58: 8
string_list:['Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_Get_Get59
guard:{'Sta.Dir.HeadPtr != NODE_1', 'Sta.Dir.Pending = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = false', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace'}
Strengthening 1 time, find 31 predicates

include 1 abstract type

Rule NI_Local_Get_Get59 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.UniMsg[NODE_1].Cmd := UNI_Get', 'Sta.UniMsg[NODE_1].Proc := Sta.Dir.HeadPtr', 'undefine Sta.UniMsg[NODE_1].Data', 'Sta.UniMsg[NODE_1].HomeProc := Sta.Dir.HomeHeadPtr']
after:['Sta.Dir.Pending := true', 'Sta.UniMsg[NODE_1].Cmd := UNI_Get', 'Sta.UniMsg[NODE_1].Proc := Sta.Dir.HeadPtr', 'Sta.UniMsg[NODE_1].HomeProc := Sta.Dir.HomeHeadPtr']

Print abstract rule of NI_Local_Get_Get59, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3cff10>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true']
action:
	Sta.Dir.Pending := true;
-- Auxiliary invariants used by NI_Local_Get_Get59: 6
string_list:['Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_Get_Get60
guard:{'Sta.Dir.Pending = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = false', 'Sta.Dir.HomeHeadPtr = true', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace'}
Strengthening 1 time, find 28 predicates

include 1 abstract type

Rule NI_Local_Get_Get60 has 1 parameter.
contentbefore:['Sta.Dir.Pending := true', 'Sta.UniMsg[NODE_1].Cmd := UNI_Get', 'Sta.UniMsg[NODE_1].Proc := Sta.Dir.HeadPtr', 'undefine Sta.UniMsg[NODE_1].Data', 'Sta.UniMsg[NODE_1].HomeProc := Sta.Dir.HomeHeadPtr']
after:['Sta.Dir.Pending := true', 'Sta.UniMsg[NODE_1].Cmd := UNI_Get', 'Sta.UniMsg[NODE_1].Proc := Sta.Dir.HeadPtr', 'Sta.UniMsg[NODE_1].HomeProc := Sta.Dir.HomeHeadPtr']

Print abstract rule of NI_Local_Get_Get60, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.Dir.Pending := true']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc07bd00>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.Dir.Pending := true']
action:
	Sta.Dir.Pending := true;
-- Auxiliary invariants used by NI_Local_Get_Get60: 8
string_list:['Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_Get_Nak61
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace', 'Sta.Dir.Pending = true'}
Strengthening 1 time, find 17 predicates

include 1 abstract type

Rule NI_Local_Get_Nak61 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true']
action part is empty
-- Auxiliary invariants used by NI_Local_Get_Nak61: 8
string_list:['Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_Get_Nak62
guard:{'Sta.Dir.Dirty = true', 'Sta.Dir.Local = true', 'Sta.HomeProc.CacheState != CACHE_E', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace'}
Strengthening 1 time, find 25 predicates

include 1 abstract type

Rule NI_Local_Get_Nak62 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true']
action part is empty
-- Auxiliary invariants used by NI_Local_Get_Nak62: 8
string_list:['Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Local_Get_Nak63
guard:{'Sta.Dir.HomeHeadPtr = false', 'Sta.Dir.Dirty = true', 'Sta.Dir.Local = false', 'Sta.Dir.HeadPtr = NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace'}
Strengthening 1 time, find 22 predicates

include 1 abstract type

Rule NI_Local_Get_Nak63 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_Nak', 'Sta.UniMsg[NODE_1].HomeProc := true']
action part is empty
-- Auxiliary invariants used by NI_Local_Get_Nak63: 8
string_list:['Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.Dir.HeadPtr != NODE_2', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_1', 'Sta.RpMsg[NODE_1].Cmd != RP_Replace -> Sta.Dir.HeadPtr != NODE_2', 'Sta.UniMsg[NODE_1].Cmd = UNI_Get -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: NI_Nak66
guard:{'Sta.UniMsg[NODE_1].Cmd = UNI_Nak'}
Strengthening 1 time, find 11 predicates

include 1 abstract type

Rule NI_Nak66 has 1 parameter.
contentbefore:['Sta.UniMsg[NODE_1].Cmd := UNI_None', 'Sta.UniMsg[NODE_1].HomeProc := false', 'Sta.Proc[NODE_1].ProcCmd := NODE_None', 'Sta.Proc[NODE_1].InvMarked := false', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.UniMsg[NODE_1].Cmd := UNI_None', 'Sta.UniMsg[NODE_1].HomeProc := false', 'Sta.Proc[NODE_1].ProcCmd := NODE_None', 'Sta.Proc[NODE_1].InvMarked := false']
action part is empty
-- Auxiliary invariants used by NI_Nak66: 4
string_list:['Sta.UniMsg[NODE_1].Cmd = UNI_Nak -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.UniMsg[NODE_1].Cmd = UNI_Nak -> Sta.Dir.HeadPtr != NODE_1', 'Sta.UniMsg[NODE_1].Cmd = UNI_Nak -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.UniMsg[NODE_1].Cmd = UNI_Nak -> Sta.Dir.HeadPtr != NODE_2']


[Rulename]: PI_Remote_Replace68
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_S'}
Strengthening 1 time, find 20 predicates

include 1 abstract type

Rule PI_Remote_Replace68 has 1 parameter.
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.RpMsg[NODE_1].Cmd := RP_Replace', 'undefine Sta.Proc[NODE_1].CacheData']
after:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.RpMsg[NODE_1].Cmd := RP_Replace']
action part is empty
-- Auxiliary invariants used by PI_Remote_Replace68: 12
string_list:['Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.WbMsg.Cmd != WB_Wb', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_S -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: PI_Remote_PutX71
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 42 predicates

include 1 abstract type

Rule PI_Remote_PutX71 has 1 parameter.
stmt:Sta.WbMsg.Data := Sta.Proc[NODE_1].CacheData,assign:Sta.Proc[NODE_1].CacheData,rep_dict[assign]:Sta.CurrData
stmt:Sta.WbMsg.Data := Sta.CurrData
contentbefore:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.WbMsg.Cmd := WB_Wb', 'Sta.WbMsg.Proc := NODE_1', 'Sta.WbMsg.HomeProc := false', 'Sta.WbMsg.Data := Sta.Proc[NODE_1].CacheData', 'undefine Sta.Proc[NODE_1].CacheData']
after:['Sta.Proc[NODE_1].CacheState := CACHE_I', 'Sta.WbMsg.Cmd := WB_Wb', 'Sta.WbMsg.Proc := NODE_1', 'Sta.WbMsg.HomeProc := false', 'Sta.WbMsg.Data := Sta.CurrData']

Print abstract rule of PI_Remote_PutX71, abstract NODE_1
para_dcit:{'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.WbMsg.Cmd := WB_Wb', 'Sta.WbMsg.Proc := Other', 'Sta.WbMsg.HomeProc := false', 'Sta.WbMsg.Data := Sta.CurrData']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3cfd90>
para_list:{'NODE_1'}
22222222222222222222222222






content:['Sta.WbMsg.Cmd := WB_Wb', 'Sta.WbMsg.Proc := Other', 'Sta.WbMsg.HomeProc := false', 'Sta.WbMsg.Data := Sta.CurrData']
action:
	Sta.WbMsg.Cmd := WB_Wb ;
	Sta.WbMsg.Proc := Other ;
	Sta.WbMsg.HomeProc := false ;
	Sta.WbMsg.Data := Sta.CurrData;
-- Auxiliary invariants used by PI_Remote_PutX71: 31
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].InvMarked = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd = SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_S', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState = CACHE_I', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb']


[Rulename]: PI_Remote_GetX80
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_I'}
Strengthening 1 time, find 13 predicates

include 1 abstract type

Rule PI_Remote_GetX80 has 1 parameter.
contentbefore:['Sta.Proc[NODE_1].ProcCmd := NODE_GetX', 'Sta.UniMsg[NODE_1].Cmd := UNI_GetX', 'Sta.UniMsg[NODE_1].HomeProc := true', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.Proc[NODE_1].ProcCmd := NODE_GetX', 'Sta.UniMsg[NODE_1].Cmd := UNI_GetX', 'Sta.UniMsg[NODE_1].HomeProc := true']
action part is empty
-- Auxiliary invariants used by PI_Remote_GetX80: 8
string_list:['Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_I -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_I -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_I -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_I -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: PI_Remote_Get84
guard:{'Sta.Proc[NODE_1].ProcCmd = NODE_None', 'Sta.Proc[NODE_1].CacheState = CACHE_I'}
Strengthening 1 time, find 13 predicates

include 1 abstract type

Rule PI_Remote_Get84 has 1 parameter.
contentbefore:['Sta.Proc[NODE_1].ProcCmd := NODE_Get', 'Sta.UniMsg[NODE_1].Cmd := UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc := true', 'undefine Sta.UniMsg[NODE_1].Proc', 'undefine Sta.UniMsg[NODE_1].Data']
after:['Sta.Proc[NODE_1].ProcCmd := NODE_Get', 'Sta.UniMsg[NODE_1].Cmd := UNI_Get', 'Sta.UniMsg[NODE_1].HomeProc := true']
action part is empty
-- Auxiliary invariants used by PI_Remote_Get84: 8
string_list:['Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_I -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_I -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_I -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_I -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].ProcCmd = NODE_None -> Sta.InvMsg[NODE_2].Cmd != INV_Inv']


[Rulename]: Store_Home85
guard:{'Sta.HomeProc.CacheState = CACHE_E'}
Strengthening 1 time, find 0 predicates

include 0 abstract type

Rule Store_Home85 has no parameter.
string_list:[]


[Rulename]: Store86
guard:{'Sta.Proc[NODE_1].CacheState = CACHE_E'}
Strengthening 1 time, find 42 predicates

include 1 abstract type

Rule Store86 has 1 parameter.
contentbefore:['Sta.Proc[NODE_1].CacheData := DATA_1', 'Sta.CurrData := DATA_1']
after:['Sta.Proc[NODE_1].CacheData := DATA_1', 'Sta.CurrData := DATA_1']

Print abstract rule of Store86, abstract NODE_1
para_dcit:{'DATA_1': 'DATA', 'NODE_1': 'NODE'}
cur_para_dict:{'NODE_2': 'NODE', 'NODE_1': 'NODE'}
22222222222222222222222222






content:['Sta.CurrData := DATA_1']
abs_action_obj:<murphi_analysis.analyser.Action object at 0x7f8ecc3cfdf0>
para_list:{'DATA_1', 'NODE_1'}
22222222222222222222222222






content:['Sta.CurrData := DATA_1']
action:
	Sta.CurrData := DATA_1;
-- Auxiliary invariants used by Store86: 27
string_list:['Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_PutX', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Pending = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].InvMarked = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Dirty = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd = SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Cmd != UNI_Put', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.InvSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrVld = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadVld = true', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_Inv', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_ShWb', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.Local = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Cmd != SHWB_FAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_S', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.NakcMsg.Cmd != NAKC_Nakc', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.ShWbMsg.Proc != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr = NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.HeadPtr != NODE_2', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.InvMsg[NODE_2].Cmd != INV_InvAck', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState != CACHE_E', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.UniMsg[NODE_2].Proc != NODE_1', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Dir.ShrSet[NODE_2] = false', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.Proc[NODE_2].CacheState = CACHE_I', 'Sta.Proc[NODE_1].CacheState = CACHE_E -> Sta.WbMsg.Cmd != WB_Wb']
checking ./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m

checking invariants...
original_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m
num core = 1, type = <class 'int'>
ranges [(0, 270)]
start:0,end:1
original_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux.m
new_file:./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m
[call murphi]compile murphi to cpp....
command1 = /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/src/mu ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.m
command2 = g++ -ggdb -o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.o ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.cpp -I /home/lyj238/protocol/cmurphi5.4.9.1/cmurphi5.4.9.1/include -lm
command3 = ./protocols/flash_unde_noaux/ABS_flash_unde_noaux_1.o -m1000 -finderrors -ndl -m100
compile murphi file to cpp....
Code generated
compile .cpp to .o file....
running .o file....
counter_ex:[]
[]
original rule: 270, remove 0, remain 270
counterex_index []
usedF all passed!
End verifing, no counter-examples
